// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Jag.PillPressRegistry.Interfaces.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Microsoft.Dynamics.CRM.role
    /// </summary>
    public partial class MicrosoftDynamicsCRMrole
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMrole class.
        /// </summary>
        public MicrosoftDynamicsCRMrole()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMrole class.
        /// </summary>
        /// <param name="_parentrootroleidValue">Unique identifier of the
        /// parent root role.</param>
        /// <param name="importsequencenumber">Unique identifier of the data
        /// import or data migration that created this record.</param>
        /// <param name="overriddencreatedon">Date and time that the record was
        /// migrated.</param>
        /// <param name="_roletemplateidValue">Unique identifier of the role
        /// template that is associated with the role.</param>
        /// <param name="createdon">Date and time when the role was
        /// created.</param>
        /// <param name="roleidunique">For internal use only.</param>
        /// <param name="ismanaged">Indicates whether the solution component is
        /// part of a managed solution.</param>
        /// <param name="_modifiedbyValue">Unique identifier of the user who
        /// last modified the role.</param>
        /// <param name="modifiedon">Date and time when the role was last
        /// modified.</param>
        /// <param name="organizationid">Unique identifier of the organization
        /// associated with the role.</param>
        /// <param name="solutionid">Unique identifier of the associated
        /// solution.</param>
        /// <param name="name">Name of the role.</param>
        /// <param name="componentstate">For internal use only.</param>
        /// <param name="roleid">Unique identifier of the role.</param>
        /// <param name="_createdbyValue">Unique identifier of the user who
        /// created the role.</param>
        /// <param name="_createdonbehalfbyValue">Unique identifier of the
        /// delegate user who created the role.</param>
        /// <param name="versionnumber">Version number of the role.</param>
        /// <param name="iscustomizable">Information that specifies whether
        /// this component can be customized.</param>
        /// <param name="_businessunitidValue">Unique identifier of the
        /// business unit with which the role is associated.</param>
        /// <param name="_modifiedonbehalfbyValue">Unique identifier of the
        /// delegate user who last modified the role.</param>
        /// <param name="_parentroleidValue">Unique identifier of the parent
        /// role.</param>
        /// <param name="overwritetime">For internal use only.</param>
        public MicrosoftDynamicsCRMrole(string _parentrootroleidValue = default(string), int? importsequencenumber = default(int?), System.DateTimeOffset? overriddencreatedon = default(System.DateTimeOffset?), string _roletemplateidValue = default(string), System.DateTimeOffset? createdon = default(System.DateTimeOffset?), string roleidunique = default(string), bool? ismanaged = default(bool?), string _modifiedbyValue = default(string), System.DateTimeOffset? modifiedon = default(System.DateTimeOffset?), string organizationid = default(string), string solutionid = default(string), string name = default(string), int? componentstate = default(int?), string roleid = default(string), string _createdbyValue = default(string), string _createdonbehalfbyValue = default(string), string versionnumber = default(string), string iscustomizable = default(string), string _businessunitidValue = default(string), string _modifiedonbehalfbyValue = default(string), string _parentroleidValue = default(string), System.DateTimeOffset? overwritetime = default(System.DateTimeOffset?), IList<MicrosoftDynamicsCRMsystemuser> systemuserrolesAssociation = default(IList<MicrosoftDynamicsCRMsystemuser>), IList<MicrosoftDynamicsCRMprivilege> roleprivilegesAssociation = default(IList<MicrosoftDynamicsCRMprivilege>), MicrosoftDynamicsCRMsystemuser createdonbehalfby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser modifiedby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser modifiedonbehalfby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMrole parentroleid = default(MicrosoftDynamicsCRMrole), IList<MicrosoftDynamicsCRMrole> roleParentRole = default(IList<MicrosoftDynamicsCRMrole>), MicrosoftDynamicsCRMbusinessunit businessunitid = default(MicrosoftDynamicsCRMbusinessunit), MicrosoftDynamicsCRMroletemplate roletemplateid = default(MicrosoftDynamicsCRMroletemplate), IList<MicrosoftDynamicsCRMasyncoperation> roleAsyncOperations = default(IList<MicrosoftDynamicsCRMasyncoperation>), IList<MicrosoftDynamicsCRMbulkdeletefailure> roleBulkDeleteFailures = default(IList<MicrosoftDynamicsCRMbulkdeletefailure>), MicrosoftDynamicsCRMorganization organizationidOrganization = default(MicrosoftDynamicsCRMorganization), MicrosoftDynamicsCRMsystemuser createdby = default(MicrosoftDynamicsCRMsystemuser), IList<MicrosoftDynamicsCRMteam> teamrolesAssociation = default(IList<MicrosoftDynamicsCRMteam>), MicrosoftDynamicsCRMrole parentrootroleid = default(MicrosoftDynamicsCRMrole), IList<MicrosoftDynamicsCRMrole> roleParentRootRole = default(IList<MicrosoftDynamicsCRMrole>), IList<MicrosoftDynamicsCRMsyncerror> roleSyncErrors = default(IList<MicrosoftDynamicsCRMsyncerror>))
        {
            this._parentrootroleidValue = _parentrootroleidValue;
            Importsequencenumber = importsequencenumber;
            Overriddencreatedon = overriddencreatedon;
            this._roletemplateidValue = _roletemplateidValue;
            Createdon = createdon;
            Roleidunique = roleidunique;
            Ismanaged = ismanaged;
            this._modifiedbyValue = _modifiedbyValue;
            Modifiedon = modifiedon;
            Organizationid = organizationid;
            Solutionid = solutionid;
            Name = name;
            Componentstate = componentstate;
            Roleid = roleid;
            this._createdbyValue = _createdbyValue;
            this._createdonbehalfbyValue = _createdonbehalfbyValue;
            Versionnumber = versionnumber;
            Iscustomizable = iscustomizable;
            this._businessunitidValue = _businessunitidValue;
            this._modifiedonbehalfbyValue = _modifiedonbehalfbyValue;
            this._parentroleidValue = _parentroleidValue;
            Overwritetime = overwritetime;
            SystemuserrolesAssociation = systemuserrolesAssociation;
            RoleprivilegesAssociation = roleprivilegesAssociation;
            Createdonbehalfby = createdonbehalfby;
            Modifiedby = modifiedby;
            Modifiedonbehalfby = modifiedonbehalfby;
            Parentroleid = parentroleid;
            RoleParentRole = roleParentRole;
            Businessunitid = businessunitid;
            Roletemplateid = roletemplateid;
            RoleAsyncOperations = roleAsyncOperations;
            RoleBulkDeleteFailures = roleBulkDeleteFailures;
            OrganizationidOrganization = organizationidOrganization;
            Createdby = createdby;
            TeamrolesAssociation = teamrolesAssociation;
            Parentrootroleid = parentrootroleid;
            RoleParentRootRole = roleParentRootRole;
            RoleSyncErrors = roleSyncErrors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unique identifier of the parent root role.
        /// </summary>
        [JsonProperty(PropertyName = "_parentrootroleid_value")]
        public string _parentrootroleidValue { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the data import or data migration
        /// that created this record.
        /// </summary>
        [JsonProperty(PropertyName = "importsequencenumber")]
        public int? Importsequencenumber { get; set; }

        /// <summary>
        /// Gets or sets date and time that the record was migrated.
        /// </summary>
        [JsonProperty(PropertyName = "overriddencreatedon")]
        public System.DateTimeOffset? Overriddencreatedon { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the role template that is
        /// associated with the role.
        /// </summary>
        [JsonProperty(PropertyName = "_roletemplateid_value")]
        public string _roletemplateidValue { get; set; }

        /// <summary>
        /// Gets or sets date and time when the role was created.
        /// </summary>
        [JsonProperty(PropertyName = "createdon")]
        public System.DateTimeOffset? Createdon { get; set; }

        /// <summary>
        /// Gets or sets for internal use only.
        /// </summary>
        [JsonProperty(PropertyName = "roleidunique")]
        public string Roleidunique { get; set; }

        /// <summary>
        /// Gets or sets indicates whether the solution component is part of a
        /// managed solution.
        /// </summary>
        [JsonProperty(PropertyName = "ismanaged")]
        public bool? Ismanaged { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the user who last modified the
        /// role.
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedby_value")]
        public string _modifiedbyValue { get; set; }

        /// <summary>
        /// Gets or sets date and time when the role was last modified.
        /// </summary>
        [JsonProperty(PropertyName = "modifiedon")]
        public System.DateTimeOffset? Modifiedon { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the organization associated with
        /// the role.
        /// </summary>
        [JsonProperty(PropertyName = "organizationid")]
        public string Organizationid { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the associated solution.
        /// </summary>
        [JsonProperty(PropertyName = "solutionid")]
        public string Solutionid { get; set; }

        /// <summary>
        /// Gets or sets name of the role.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets for internal use only.
        /// </summary>
        [JsonProperty(PropertyName = "componentstate")]
        public int? Componentstate { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the role.
        /// </summary>
        [JsonProperty(PropertyName = "roleid")]
        public string Roleid { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the user who created the role.
        /// </summary>
        [JsonProperty(PropertyName = "_createdby_value")]
        public string _createdbyValue { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the delegate user who created the
        /// role.
        /// </summary>
        [JsonProperty(PropertyName = "_createdonbehalfby_value")]
        public string _createdonbehalfbyValue { get; set; }

        /// <summary>
        /// Gets or sets version number of the role.
        /// </summary>
        [JsonProperty(PropertyName = "versionnumber")]
        public string Versionnumber { get; set; }

        /// <summary>
        /// Gets or sets information that specifies whether this component can
        /// be customized.
        /// </summary>
        [JsonProperty(PropertyName = "iscustomizable")]
        public string Iscustomizable { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the business unit with which the
        /// role is associated.
        /// </summary>
        [JsonProperty(PropertyName = "_businessunitid_value")]
        public string _businessunitidValue { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the delegate user who last
        /// modified the role.
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedonbehalfby_value")]
        public string _modifiedonbehalfbyValue { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the parent role.
        /// </summary>
        [JsonProperty(PropertyName = "_parentroleid_value")]
        public string _parentroleidValue { get; set; }

        /// <summary>
        /// Gets or sets for internal use only.
        /// </summary>
        [JsonProperty(PropertyName = "overwritetime")]
        public System.DateTimeOffset? Overwritetime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "systemuserroles_association")]
        public IList<MicrosoftDynamicsCRMsystemuser> SystemuserrolesAssociation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "roleprivileges_association")]
        public IList<MicrosoftDynamicsCRMprivilege> RoleprivilegesAssociation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Createdonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentroleid")]
        public MicrosoftDynamicsCRMrole Parentroleid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "role_parent_role")]
        public IList<MicrosoftDynamicsCRMrole> RoleParentRole { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "businessunitid")]
        public MicrosoftDynamicsCRMbusinessunit Businessunitid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "roletemplateid")]
        public MicrosoftDynamicsCRMroletemplate Roletemplateid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Role_AsyncOperations")]
        public IList<MicrosoftDynamicsCRMasyncoperation> RoleAsyncOperations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Role_BulkDeleteFailures")]
        public IList<MicrosoftDynamicsCRMbulkdeletefailure> RoleBulkDeleteFailures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "organizationid_organization")]
        public MicrosoftDynamicsCRMorganization OrganizationidOrganization { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdby")]
        public MicrosoftDynamicsCRMsystemuser Createdby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "teamroles_association")]
        public IList<MicrosoftDynamicsCRMteam> TeamrolesAssociation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentrootroleid")]
        public MicrosoftDynamicsCRMrole Parentrootroleid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "role_parent_root_role")]
        public IList<MicrosoftDynamicsCRMrole> RoleParentRootRole { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Role_SyncErrors")]
        public IList<MicrosoftDynamicsCRMsyncerror> RoleSyncErrors { get; set; }

    }
}
