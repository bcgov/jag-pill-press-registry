// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Jag.PillPressRegistry.Interfaces.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Microsoft.Dynamics.CRM.businessunit
    /// </summary>
    public partial class MicrosoftDynamicsCRMbusinessunit
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMbusinessunit
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMbusinessunit()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMbusinessunit
        /// class.
        /// </summary>
        /// <param name="address1Line2">Second line for entering address 1
        /// information.</param>
        /// <param name="address1Stateorprovince">State or province for address
        /// 1.</param>
        /// <param name="address1Addresstypecode">Type of address for address
        /// 1, such as billing, shipping, or primary address.</param>
        /// <param name="_organizationidValue">Unique identifier of the
        /// organization associated with the business unit.</param>
        /// <param name="address2Addresstypecode">Type of address for address
        /// 2, such as billing, shipping, or primary address.</param>
        /// <param name="_modifiedonbehalfbyValue">Unique identifier of the
        /// delegate user who last modified the businessunit.</param>
        /// <param name="address2Addressid">Unique identifier for address
        /// 2.</param>
        /// <param name="creditlimit">Credit limit for the business
        /// unit.</param>
        /// <param name="exchangerate">Exchange rate for the currency
        /// associated with the businessunit with respect to the base
        /// currency.</param>
        /// <param name="emailaddress">Email address for the business
        /// unit.</param>
        /// <param name="_modifiedbyValue">Unique identifier of the user who
        /// last modified the business unit.</param>
        /// <param name="stockexchange">Stock exchange on which the business is
        /// listed.</param>
        /// <param name="address1Telephone1">First telephone number associated
        /// with address 1.</param>
        /// <param name="address2Shippingmethodcode">Method of shipment for
        /// address 2.</param>
        /// <param name="address2Country">Country/region name for address
        /// 2.</param>
        /// <param name="address2Name">Name to enter for address 2.</param>
        /// <param name="versionnumber">Version number of the business
        /// unit.</param>
        /// <param name="createdon">Date and time when the business unit was
        /// created.</param>
        /// <param name="tickersymbol">Stock exchange ticker symbol for the
        /// business unit.</param>
        /// <param name="address2Utcoffset">UTC offset for address 2. This is
        /// the difference between local time and standard Coordinated
        /// Universal Time.</param>
        /// <param name="address2Latitude">Latitude for address 2.</param>
        /// <param name="name">Name of the business unit.</param>
        /// <param name="_parentbusinessunitidValue">Unique identifier for the
        /// parent business unit.</param>
        /// <param name="address2Fax">Fax number for address 2.</param>
        /// <param name="importsequencenumber">Unique identifier of the data
        /// import or data migration that created this record.</param>
        /// <param name="picture">Picture or diagram of the business
        /// unit.</param>
        /// <param name="address1County">County name for address 1.</param>
        /// <param name="address2Line1">First line for entering address 2
        /// information.</param>
        /// <param name="_createdonbehalfbyValue">Unique identifier of the
        /// delegate user who created the businessunit.</param>
        /// <param name="address2Telephone2">Second telephone number associated
        /// with address 2.</param>
        /// <param name="divisionname">Name of the division to which the
        /// business unit belongs.</param>
        /// <param name="websiteurl">Website URL for the business unit.</param>
        /// <param name="address2Telephone1">First telephone number associated
        /// with address 2.</param>
        /// <param name="address2Postofficebox">Post office box number for
        /// address 2.</param>
        /// <param name="fileasname">Alternative name under which the business
        /// unit can be filed.</param>
        /// <param name="address1Telephone3">Third telephone number associated
        /// with address 1.</param>
        /// <param name="address1Line1">First line for entering address 1
        /// information.</param>
        /// <param name="address2Line3">Third line for entering address 2
        /// information.</param>
        /// <param name="address1City">City name for address 1.</param>
        /// <param name="modifiedon">Date and time when the business unit was
        /// last modified.</param>
        /// <param name="businessunitid">Unique identifier of the business
        /// unit.</param>
        /// <param name="utcoffset">UTC offset for the business unit. This is
        /// the difference between local time and standard Coordinated
        /// Universal Time.</param>
        /// <param name="address2Longitude">Longitude for address 2.</param>
        /// <param name="address1Shippingmethodcode">Method of shipment for
        /// address 1.</param>
        /// <param name="address1Latitude">Latitude for address 1.</param>
        /// <param name="inheritancemask">Inheritance mask for the business
        /// unit.</param>
        /// <param name="costcenter">Name of the business unit cost
        /// center.</param>
        /// <param name="address1Utcoffset">UTC offset for address 1. This is
        /// the difference between local time and standard Coordinated
        /// Universal Time.</param>
        /// <param name="address2Line2">Second line for entering address 2
        /// information.</param>
        /// <param name="address1Fax">Fax number for address 1.</param>
        /// <param name="address1Name">Name to enter for address 1.</param>
        /// <param name="address1Line3">Third line for entering address 1
        /// information.</param>
        /// <param name="address2Telephone3">Third telephone number associated
        /// with address 2.</param>
        /// <param name="address1Longitude">Longitude for address 1.</param>
        /// <param name="address2Upszone">United Parcel Service (UPS) zone for
        /// address 2.</param>
        /// <param name="_calendaridValue">Fiscal calendar associated with the
        /// business unit.</param>
        /// <param name="address2County">County name for address 2.</param>
        /// <param name="address2City">City name for address 2.</param>
        /// <param name="address1Postofficebox">Post office box number for
        /// address 1.</param>
        /// <param name="workflowsuspended">Information about whether workflow
        /// or sales process rules have been suspended.</param>
        /// <param name="address1Postalcode">ZIP Code or postal code for
        /// address 1.</param>
        /// <param name="_createdbyValue">Unique identifier of the user who
        /// created the business unit.</param>
        /// <param name="_transactioncurrencyidValue">Unique identifier of the
        /// currency associated with the businessunit.</param>
        /// <param name="address1Telephone2">Second telephone number associated
        /// with address 1.</param>
        /// <param name="address1Upszone">United Parcel Service (UPS) zone for
        /// address 1.</param>
        /// <param name="address2Stateorprovince">State or province for address
        /// 2.</param>
        /// <param name="overriddencreatedon">Date and time that the record was
        /// migrated.</param>
        /// <param name="address2Postalcode">ZIP Code or postal code for
        /// address 2.</param>
        /// <param name="address1Country">Country/region name for address
        /// 1.</param>
        /// <param name="description">Description of the business unit.</param>
        /// <param name="isdisabled">Information about whether the business
        /// unit is enabled or disabled.</param>
        /// <param name="address1Addressid">Unique identifier for address
        /// 1.</param>
        /// <param name="disabledreason">Reason for disabling the business
        /// unit.</param>
        /// <param name="ftpsiteurl">FTP site URL for the business
        /// unit.</param>
        public MicrosoftDynamicsCRMbusinessunit(string address1Line2 = default(string), string address1Stateorprovince = default(string), int? address1Addresstypecode = default(int?), string _organizationidValue = default(string), int? address2Addresstypecode = default(int?), string _modifiedonbehalfbyValue = default(string), string address2Addressid = default(string), decimal? creditlimit = default(decimal?), decimal? exchangerate = default(decimal?), string emailaddress = default(string), string _modifiedbyValue = default(string), string stockexchange = default(string), string address1Telephone1 = default(string), int? address2Shippingmethodcode = default(int?), string address2Country = default(string), string address2Name = default(string), string versionnumber = default(string), System.DateTimeOffset? createdon = default(System.DateTimeOffset?), string tickersymbol = default(string), int? address2Utcoffset = default(int?), decimal? address2Latitude = default(decimal?), string name = default(string), string _parentbusinessunitidValue = default(string), string address2Fax = default(string), int? importsequencenumber = default(int?), string picture = default(string), string address1County = default(string), string address2Line1 = default(string), string _createdonbehalfbyValue = default(string), string address2Telephone2 = default(string), string divisionname = default(string), string websiteurl = default(string), string address2Telephone1 = default(string), string address2Postofficebox = default(string), string fileasname = default(string), string address1Telephone3 = default(string), string address1Line1 = default(string), string address2Line3 = default(string), string address1City = default(string), System.DateTimeOffset? modifiedon = default(System.DateTimeOffset?), string businessunitid = default(string), int? utcoffset = default(int?), decimal? address2Longitude = default(decimal?), int? address1Shippingmethodcode = default(int?), decimal? address1Latitude = default(decimal?), int? inheritancemask = default(int?), string costcenter = default(string), int? address1Utcoffset = default(int?), string address2Line2 = default(string), string address1Fax = default(string), string address1Name = default(string), string address1Line3 = default(string), string address2Telephone3 = default(string), decimal? address1Longitude = default(decimal?), string address2Upszone = default(string), string _calendaridValue = default(string), string address2County = default(string), string address2City = default(string), string address1Postofficebox = default(string), bool? workflowsuspended = default(bool?), string address1Postalcode = default(string), string _createdbyValue = default(string), string _transactioncurrencyidValue = default(string), string address1Telephone2 = default(string), string address1Upszone = default(string), string address2Stateorprovince = default(string), System.DateTimeOffset? overriddencreatedon = default(System.DateTimeOffset?), string address2Postalcode = default(string), string address1Country = default(string), string description = default(string), bool? isdisabled = default(bool?), string address1Addressid = default(string), string disabledreason = default(string), string ftpsiteurl = default(string), IList<MicrosoftDynamicsCRMexchangesyncidmapping> businessUnitExchangesyncidmapping = default(IList<MicrosoftDynamicsCRMexchangesyncidmapping>), IList<MicrosoftDynamicsCRMinteractionforemail> businessUnitNewInteractionforemail = default(IList<MicrosoftDynamicsCRMinteractionforemail>), IList<MicrosoftDynamicsCRMknowledgearticle> businessUnitKnowledgearticle = default(IList<MicrosoftDynamicsCRMknowledgearticle>), IList<MicrosoftDynamicsCRMsharepointdocumentlocation> businessUnitSharepointdocumentlocation = default(IList<MicrosoftDynamicsCRMsharepointdocumentlocation>), IList<MicrosoftDynamicsCRMentitlement> businessUnitEntitlement = default(IList<MicrosoftDynamicsCRMentitlement>), IList<MicrosoftDynamicsCRMgoal> businessUnitGoal = default(IList<MicrosoftDynamicsCRMgoal>), IList<MicrosoftDynamicsCRMmailbox> businessUnitMailbox = default(IList<MicrosoftDynamicsCRMmailbox>), IList<MicrosoftDynamicsCRMbookableresource> businessUnitBookableresource = default(IList<MicrosoftDynamicsCRMbookableresource>), IList<MicrosoftDynamicsCRMbookableresourcebooking> businessUnitBookableresourcebooking = default(IList<MicrosoftDynamicsCRMbookableresourcebooking>), IList<MicrosoftDynamicsCRMbookableresourcebookingheader> businessUnitBookableresourcebookingheader = default(IList<MicrosoftDynamicsCRMbookableresourcebookingheader>), IList<MicrosoftDynamicsCRMbookableresourcecategory> businessUnitBookableresourcecategory = default(IList<MicrosoftDynamicsCRMbookableresourcecategory>), IList<MicrosoftDynamicsCRMbookableresourcecategoryassn> businessUnitBookableresourcecategoryassn = default(IList<MicrosoftDynamicsCRMbookableresourcecategoryassn>), IList<MicrosoftDynamicsCRMbookableresourcecharacteristic> businessUnitBookableresourcecharacteristic = default(IList<MicrosoftDynamicsCRMbookableresourcecharacteristic>), IList<MicrosoftDynamicsCRMbookableresourcegroup> businessUnitBookableresourcegroup = default(IList<MicrosoftDynamicsCRMbookableresourcegroup>), IList<MicrosoftDynamicsCRMbookingstatus> businessUnitBookingstatus = default(IList<MicrosoftDynamicsCRMbookingstatus>), IList<MicrosoftDynamicsCRMcharacteristic> businessUnitCharacteristic = default(IList<MicrosoftDynamicsCRMcharacteristic>), IList<MicrosoftDynamicsCRMratingmodel> businessUnitRatingmodel = default(IList<MicrosoftDynamicsCRMratingmodel>), IList<MicrosoftDynamicsCRMratingvalue> businessUnitRatingvalue = default(IList<MicrosoftDynamicsCRMratingvalue>), IList<MicrosoftDynamicsCRMsyncerror> businessUnitSyncErrors = default(IList<MicrosoftDynamicsCRMsyncerror>), IList<MicrosoftDynamicsCRMlead> businessUnitLeads = default(IList<MicrosoftDynamicsCRMlead>), MicrosoftDynamicsCRMtransactioncurrency transactioncurrencyid = default(MicrosoftDynamicsCRMtransactioncurrency), IList<MicrosoftDynamicsCRMbulkdeleteoperation> bulkDeleteOperationBusinessUnit = default(IList<MicrosoftDynamicsCRMbulkdeleteoperation>), MicrosoftDynamicsCRMsystemuser modifiedby = default(MicrosoftDynamicsCRMsystemuser), IList<MicrosoftDynamicsCRMworkflow> businessUnitWorkflow = default(IList<MicrosoftDynamicsCRMworkflow>), IList<MicrosoftDynamicsCRMsyncerror> businessUnitSyncError = default(IList<MicrosoftDynamicsCRMsyncerror>), IList<MicrosoftDynamicsCRMpostregarding> businessUnitPostRegarding = default(IList<MicrosoftDynamicsCRMpostregarding>), IList<MicrosoftDynamicsCRMpostfollow> businessUnitPostfollows = default(IList<MicrosoftDynamicsCRMpostfollow>), IList<MicrosoftDynamicsCRMasyncoperation> businessUnitAsyncOperations = default(IList<MicrosoftDynamicsCRMasyncoperation>), IList<MicrosoftDynamicsCRMqueue> businessUnitQueues = default(IList<MicrosoftDynamicsCRMqueue>), IList<MicrosoftDynamicsCRMfax> businessUnitFaxActivities = default(IList<MicrosoftDynamicsCRMfax>), IList<MicrosoftDynamicsCRMcalendar> businessUnitCalendars = default(IList<MicrosoftDynamicsCRMcalendar>), MicrosoftDynamicsCRMsystemuser createdonbehalfby = default(MicrosoftDynamicsCRMsystemuser), IList<MicrosoftDynamicsCRMinvoice> businessUnitInvoices = default(IList<MicrosoftDynamicsCRMinvoice>), IList<MicrosoftDynamicsCRMquote> businessUnitQuotes = default(IList<MicrosoftDynamicsCRMquote>), IList<MicrosoftDynamicsCRMimportlog> businessUnitImportLogs = default(IList<MicrosoftDynamicsCRMimportlog>), IList<MicrosoftDynamicsCRMannotation> businessUnitAnnotations = default(IList<MicrosoftDynamicsCRMannotation>), MicrosoftDynamicsCRMcalendar calendarid = default(MicrosoftDynamicsCRMcalendar), IList<MicrosoftDynamicsCRMopportunity> businessUnitOpportunities = default(IList<MicrosoftDynamicsCRMopportunity>), IList<MicrosoftDynamicsCRMrecurringappointmentmaster> businessUnitRecurringappointmentmasterActivities = default(IList<MicrosoftDynamicsCRMrecurringappointmentmaster>), IList<MicrosoftDynamicsCRMtemplate> businessUnitTemplates = default(IList<MicrosoftDynamicsCRMtemplate>), IList<MicrosoftDynamicsCRMdynamicpropertyinstance> businessUnitDynamicproperyinstance = default(IList<MicrosoftDynamicsCRMdynamicpropertyinstance>), IList<MicrosoftDynamicsCRMaccount> businessUnitAccounts = default(IList<MicrosoftDynamicsCRMaccount>), IList<MicrosoftDynamicsCRMresourcespec> businessUnitResourceSpecs = default(IList<MicrosoftDynamicsCRMresourcespec>), IList<MicrosoftDynamicsCRMsalesorder> businessUnitOrders = default(IList<MicrosoftDynamicsCRMsalesorder>), IList<MicrosoftDynamicsCRMorderclose> businessUnitOrderCloseActivities = default(IList<MicrosoftDynamicsCRMorderclose>), IList<MicrosoftDynamicsCRMsocialprofile> businessUnitSocialprofiles = default(IList<MicrosoftDynamicsCRMsocialprofile>), IList<MicrosoftDynamicsCRMappointment> businessUnitAppointmentActivities = default(IList<MicrosoftDynamicsCRMappointment>), IList<MicrosoftDynamicsCRMletter> businessUnitLetterActivities = default(IList<MicrosoftDynamicsCRMletter>), IList<MicrosoftDynamicsCRMactioncard> businessUnitActioncards = default(IList<MicrosoftDynamicsCRMactioncard>), IList<MicrosoftDynamicsCRMtask> businessUnitTaskActivities = default(IList<MicrosoftDynamicsCRMtask>), IList<MicrosoftDynamicsCRMactivitypointer> businessUnitActivitypointer = default(IList<MicrosoftDynamicsCRMactivitypointer>), IList<MicrosoftDynamicsCRMlist> businessUnitList = default(IList<MicrosoftDynamicsCRMlist>), IList<MicrosoftDynamicsCRMqueue> businessUnitQueues2 = default(IList<MicrosoftDynamicsCRMqueue>), IList<MicrosoftDynamicsCRMasyncoperation> businessUnitAsyncoperation = default(IList<MicrosoftDynamicsCRMasyncoperation>), IList<MicrosoftDynamicsCRMemail> businessUnitEmailActivities = default(IList<MicrosoftDynamicsCRMemail>), IList<MicrosoftDynamicsCRMrole> businessUnitRoles = default(IList<MicrosoftDynamicsCRMrole>), IList<MicrosoftDynamicsCRMresourcegroup> businessUnitResourceGroups = default(IList<MicrosoftDynamicsCRMresourcegroup>), IList<MicrosoftDynamicsCRMteam> businessUnitTeams = default(IList<MicrosoftDynamicsCRMteam>), IList<MicrosoftDynamicsCRMequipment> businessUnitEquipment = default(IList<MicrosoftDynamicsCRMequipment>), MicrosoftDynamicsCRMsystemuser createdby = default(MicrosoftDynamicsCRMsystemuser), IList<MicrosoftDynamicsCRMuserqueryvisualization> businessUnitUserqueryvisualizations = default(IList<MicrosoftDynamicsCRMuserqueryvisualization>), IList<MicrosoftDynamicsCRMslakpiinstance> businessUnitSlakpiinstance = default(IList<MicrosoftDynamicsCRMslakpiinstance>), IList<MicrosoftDynamicsCRMduplicaterule> businessUnitDuplicateRules = default(IList<MicrosoftDynamicsCRMduplicaterule>), MicrosoftDynamicsCRMsystemuser modifiedonbehalfby = default(MicrosoftDynamicsCRMsystemuser), IList<MicrosoftDynamicsCRMcampaign> businessUnitCampaigns = default(IList<MicrosoftDynamicsCRMcampaign>), IList<MicrosoftDynamicsCRMimportdata> businessUnitImportData = default(IList<MicrosoftDynamicsCRMimportdata>), MicrosoftDynamicsCRMorganization organizationid = default(MicrosoftDynamicsCRMorganization), IList<MicrosoftDynamicsCRMphonecall> businessUnitPhoneCallActivities = default(IList<MicrosoftDynamicsCRMphonecall>), IList<MicrosoftDynamicsCRMcontract> businessUnitServiceContracts = default(IList<MicrosoftDynamicsCRMcontract>), IList<MicrosoftDynamicsCRMincident> businessUnitIncidents = default(IList<MicrosoftDynamicsCRMincident>), IList<MicrosoftDynamicsCRMcontact> businessUnitContacts = default(IList<MicrosoftDynamicsCRMcontact>), IList<MicrosoftDynamicsCRMsharepointsite> businessUnitSharepointsites = default(IList<MicrosoftDynamicsCRMsharepointsite>), IList<MicrosoftDynamicsCRMemailserverprofile> businessUnitEmailserverprofile = default(IList<MicrosoftDynamicsCRMemailserverprofile>), IList<MicrosoftDynamicsCRMmailmergetemplate> businessUnitMailmergetemplates = default(IList<MicrosoftDynamicsCRMmailmergetemplate>), IList<MicrosoftDynamicsCRMbulkoperation> businessUnitBulkOperationActivities = default(IList<MicrosoftDynamicsCRMbulkoperation>), IList<MicrosoftDynamicsCRMworkflowlog> businessUnitWorkflowlogs = default(IList<MicrosoftDynamicsCRMworkflowlog>), IList<MicrosoftDynamicsCRMresource> businessUnitResources = default(IList<MicrosoftDynamicsCRMresource>), IList<MicrosoftDynamicsCRMbulkdeletefailure> businessUnitBulkDeleteFailures = default(IList<MicrosoftDynamicsCRMbulkdeletefailure>), IList<MicrosoftDynamicsCRMquoteclose> businessUnitQuoteCloseActivities = default(IList<MicrosoftDynamicsCRMquoteclose>), IList<MicrosoftDynamicsCRMconnection> businessUnitConnections = default(IList<MicrosoftDynamicsCRMconnection>), IList<MicrosoftDynamicsCRMpersonaldocumenttemplate> businessUnitPersonaldocumenttemplates = default(IList<MicrosoftDynamicsCRMpersonaldocumenttemplate>), IList<MicrosoftDynamicsCRMcampaignresponse> businessUnitCampaignresponseActivities = default(IList<MicrosoftDynamicsCRMcampaignresponse>), IList<MicrosoftDynamicsCRMimportfile> businessUnitImportFiles = default(IList<MicrosoftDynamicsCRMimportfile>), IList<MicrosoftDynamicsCRMfeedback> businessUnitFeedback = default(IList<MicrosoftDynamicsCRMfeedback>), IList<MicrosoftDynamicsCRMreport> businessUnitReports = default(IList<MicrosoftDynamicsCRMreport>), IList<MicrosoftDynamicsCRMusersettings> businessUnitUserSettings = default(IList<MicrosoftDynamicsCRMusersettings>), IList<MicrosoftDynamicsCRMincidentresolution> businessUnitIncidentResolutionActivities = default(IList<MicrosoftDynamicsCRMincidentresolution>), IList<MicrosoftDynamicsCRMconstraintbasedgroup> businessUnitConstraintBasedGroups = default(IList<MicrosoftDynamicsCRMconstraintbasedgroup>), IList<MicrosoftDynamicsCRMimport> businessUnitImports = default(IList<MicrosoftDynamicsCRMimport>), IList<MicrosoftDynamicsCRMcategory> businessUnitCategory = default(IList<MicrosoftDynamicsCRMcategory>), IList<MicrosoftDynamicsCRMsystemuser> businessUnitSystemUsers = default(IList<MicrosoftDynamicsCRMsystemuser>), IList<MicrosoftDynamicsCRMsla> businessUnitSlabase = default(IList<MicrosoftDynamicsCRMsla>), IList<MicrosoftDynamicsCRMuserform> businessUnitUserform = default(IList<MicrosoftDynamicsCRMuserform>), IList<MicrosoftDynamicsCRMsocialactivity> businessUnitSocialactivity = default(IList<MicrosoftDynamicsCRMsocialactivity>), IList<MicrosoftDynamicsCRMgoalrollupquery> businessUnitGoalrollupquery = default(IList<MicrosoftDynamicsCRMgoalrollupquery>), IList<MicrosoftDynamicsCRMuserquery> businessUnitUserquery = default(IList<MicrosoftDynamicsCRMuserquery>), IList<MicrosoftDynamicsCRMserviceappointment> businessUnitServiceAppointments = default(IList<MicrosoftDynamicsCRMserviceappointment>), IList<MicrosoftDynamicsCRMimportmap> businessUnitImportMaps = default(IList<MicrosoftDynamicsCRMimportmap>), IList<MicrosoftDynamicsCRMcampaignactivity> businessUnitCampaignactivityActivities = default(IList<MicrosoftDynamicsCRMcampaignactivity>), IList<MicrosoftDynamicsCRMopportunityclose> businessUnitOpportunityCloseActivities = default(IList<MicrosoftDynamicsCRMopportunityclose>), MicrosoftDynamicsCRMbusinessunit parentbusinessunitid = default(MicrosoftDynamicsCRMbusinessunit), IList<MicrosoftDynamicsCRMbusinessunit> businessUnitParentBusinessUnit = default(IList<MicrosoftDynamicsCRMbusinessunit>), IList<MicrosoftDynamicsCRMabsAutonumberedentity> businessUnitAbsAutonumberedentity = default(IList<MicrosoftDynamicsCRMabsAutonumberedentity>), IList<MicrosoftDynamicsCRMabsScheduledprocess> businessUnitAbsScheduledprocess = default(IList<MicrosoftDynamicsCRMabsScheduledprocess>), IList<MicrosoftDynamicsCRMabsScheduledprocessexecution> absScheduledprocessexecutionBusinessunitOwningbusinessunit = default(IList<MicrosoftDynamicsCRMabsScheduledprocessexecution>), IList<MicrosoftDynamicsCRMbcgovApplicationtype> businessUnitBcgovApplicationtype = default(IList<MicrosoftDynamicsCRMbcgovApplicationtype>), IList<MicrosoftDynamicsCRMbcgovBusinesscontact> businessUnitBcgovBusinesscontact = default(IList<MicrosoftDynamicsCRMbcgovBusinesscontact>), IList<MicrosoftDynamicsCRMbcgovCertificate> businessUnitBcgovCertificate = default(IList<MicrosoftDynamicsCRMbcgovCertificate>), IList<MicrosoftDynamicsCRMbcgovCertificateapprovedproduct> businessUnitBcgovCertificateapprovedproduct = default(IList<MicrosoftDynamicsCRMbcgovCertificateapprovedproduct>), IList<MicrosoftDynamicsCRMbcgovCertificatetermsandconditions> businessUnitBcgovCertificatetermsandconditions = default(IList<MicrosoftDynamicsCRMbcgovCertificatetermsandconditions>), IList<MicrosoftDynamicsCRMbcgovCustomaddress> businessUnitBcgovCustomaddress = default(IList<MicrosoftDynamicsCRMbcgovCustomaddress>), IList<MicrosoftDynamicsCRMbcgovCustomproduct> businessUnitBcgovCustomproduct = default(IList<MicrosoftDynamicsCRMbcgovCustomproduct>), IList<MicrosoftDynamicsCRMbcgovEquipment> businessUnitBcgovEquipment = default(IList<MicrosoftDynamicsCRMbcgovEquipment>), IList<MicrosoftDynamicsCRMbcgovEquipmentlocation> businessUnitBcgovEquipmentlocation = default(IList<MicrosoftDynamicsCRMbcgovEquipmentlocation>), IList<MicrosoftDynamicsCRMbcgovLocation> businessUnitBcgovLocation = default(IList<MicrosoftDynamicsCRMbcgovLocation>), IList<MicrosoftDynamicsCRMbcgovRiskassessment> businessUnitBcgovRiskassessment = default(IList<MicrosoftDynamicsCRMbcgovRiskassessment>), IList<MicrosoftDynamicsCRMbcgovTermsconditionspreset> businessUnitBcgovTermsconditionspreset = default(IList<MicrosoftDynamicsCRMbcgovTermsconditionspreset>), IList<MicrosoftDynamicsCRMbcgovInspection> businessUnitBcgovInspection = default(IList<MicrosoftDynamicsCRMbcgovInspection>), IList<MicrosoftDynamicsCRMbcgovRegion> businessUnitBcgovRegion = default(IList<MicrosoftDynamicsCRMbcgovRegion>), IList<MicrosoftDynamicsCRMbcgovPostalcode> businessUnitBcgovPostalcode = default(IList<MicrosoftDynamicsCRMbcgovPostalcode>), IList<MicrosoftDynamicsCRMbcgovInspectionownershipcategory> businessUnitBcgovInspectionownershipcategory = default(IList<MicrosoftDynamicsCRMbcgovInspectionownershipcategory>), IList<MicrosoftDynamicsCRMbcgovActregulationreference> businessUnitBcgovActregulationreference = default(IList<MicrosoftDynamicsCRMbcgovActregulationreference>), IList<MicrosoftDynamicsCRMbcgovCustomuser> businessUnitBcgovCustomuser = default(IList<MicrosoftDynamicsCRMbcgovCustomuser>), IList<MicrosoftDynamicsCRMbcgovInspectionchecklist> businessUnitBcgovInspectionchecklist = default(IList<MicrosoftDynamicsCRMbcgovInspectionchecklist>), IList<MicrosoftDynamicsCRMbcgovRole> businessUnitBcgovRole = default(IList<MicrosoftDynamicsCRMbcgovRole>), IList<MicrosoftDynamicsCRMbcgovComplaint> businessUnitBcgovComplaint = default(IList<MicrosoftDynamicsCRMbcgovComplaint>), IList<MicrosoftDynamicsCRMbcgovViolationticket> businessUnitBcgovViolationticket = default(IList<MicrosoftDynamicsCRMbcgovViolationticket>), IList<MicrosoftDynamicsCRMbcgovInvestigationstep> businessUnitBcgovInvestigationstep = default(IList<MicrosoftDynamicsCRMbcgovInvestigationstep>), IList<MicrosoftDynamicsCRMbcgovCecontacttype> businessUnitBcgovCecontacttype = default(IList<MicrosoftDynamicsCRMbcgovCecontacttype>), IList<MicrosoftDynamicsCRMbcgovCecontact> businessUnitBcgovCecontact = default(IList<MicrosoftDynamicsCRMbcgovCecontact>), IList<MicrosoftDynamicsCRMbcgovArea> businessUnitBcgovArea = default(IList<MicrosoftDynamicsCRMbcgovArea>), IList<MicrosoftDynamicsCRMbcgovInvestigation> businessUnitBcgovInvestigation = default(IList<MicrosoftDynamicsCRMbcgovInvestigation>), IList<MicrosoftDynamicsCRMbcgovComplaintchecklist> businessUnitBcgovComplaintchecklist = default(IList<MicrosoftDynamicsCRMbcgovComplaintchecklist>))
        {
            Address1Line2 = address1Line2;
            Address1Stateorprovince = address1Stateorprovince;
            Address1Addresstypecode = address1Addresstypecode;
            this._organizationidValue = _organizationidValue;
            Address2Addresstypecode = address2Addresstypecode;
            this._modifiedonbehalfbyValue = _modifiedonbehalfbyValue;
            Address2Addressid = address2Addressid;
            Creditlimit = creditlimit;
            Exchangerate = exchangerate;
            Emailaddress = emailaddress;
            this._modifiedbyValue = _modifiedbyValue;
            Stockexchange = stockexchange;
            Address1Telephone1 = address1Telephone1;
            Address2Shippingmethodcode = address2Shippingmethodcode;
            Address2Country = address2Country;
            Address2Name = address2Name;
            Versionnumber = versionnumber;
            Createdon = createdon;
            Tickersymbol = tickersymbol;
            Address2Utcoffset = address2Utcoffset;
            Address2Latitude = address2Latitude;
            Name = name;
            this._parentbusinessunitidValue = _parentbusinessunitidValue;
            Address2Fax = address2Fax;
            Importsequencenumber = importsequencenumber;
            Picture = picture;
            Address1County = address1County;
            Address2Line1 = address2Line1;
            this._createdonbehalfbyValue = _createdonbehalfbyValue;
            Address2Telephone2 = address2Telephone2;
            Divisionname = divisionname;
            Websiteurl = websiteurl;
            Address2Telephone1 = address2Telephone1;
            Address2Postofficebox = address2Postofficebox;
            Fileasname = fileasname;
            Address1Telephone3 = address1Telephone3;
            Address1Line1 = address1Line1;
            Address2Line3 = address2Line3;
            Address1City = address1City;
            Modifiedon = modifiedon;
            Businessunitid = businessunitid;
            Utcoffset = utcoffset;
            Address2Longitude = address2Longitude;
            Address1Shippingmethodcode = address1Shippingmethodcode;
            Address1Latitude = address1Latitude;
            Inheritancemask = inheritancemask;
            Costcenter = costcenter;
            Address1Utcoffset = address1Utcoffset;
            Address2Line2 = address2Line2;
            Address1Fax = address1Fax;
            Address1Name = address1Name;
            Address1Line3 = address1Line3;
            Address2Telephone3 = address2Telephone3;
            Address1Longitude = address1Longitude;
            Address2Upszone = address2Upszone;
            this._calendaridValue = _calendaridValue;
            Address2County = address2County;
            Address2City = address2City;
            Address1Postofficebox = address1Postofficebox;
            Workflowsuspended = workflowsuspended;
            Address1Postalcode = address1Postalcode;
            this._createdbyValue = _createdbyValue;
            this._transactioncurrencyidValue = _transactioncurrencyidValue;
            Address1Telephone2 = address1Telephone2;
            Address1Upszone = address1Upszone;
            Address2Stateorprovince = address2Stateorprovince;
            Overriddencreatedon = overriddencreatedon;
            Address2Postalcode = address2Postalcode;
            Address1Country = address1Country;
            Description = description;
            Isdisabled = isdisabled;
            Address1Addressid = address1Addressid;
            Disabledreason = disabledreason;
            Ftpsiteurl = ftpsiteurl;
            BusinessUnitExchangesyncidmapping = businessUnitExchangesyncidmapping;
            BusinessUnitNewInteractionforemail = businessUnitNewInteractionforemail;
            BusinessUnitKnowledgearticle = businessUnitKnowledgearticle;
            BusinessUnitSharepointdocumentlocation = businessUnitSharepointdocumentlocation;
            BusinessUnitEntitlement = businessUnitEntitlement;
            BusinessUnitGoal = businessUnitGoal;
            BusinessUnitMailbox = businessUnitMailbox;
            BusinessUnitBookableresource = businessUnitBookableresource;
            BusinessUnitBookableresourcebooking = businessUnitBookableresourcebooking;
            BusinessUnitBookableresourcebookingheader = businessUnitBookableresourcebookingheader;
            BusinessUnitBookableresourcecategory = businessUnitBookableresourcecategory;
            BusinessUnitBookableresourcecategoryassn = businessUnitBookableresourcecategoryassn;
            BusinessUnitBookableresourcecharacteristic = businessUnitBookableresourcecharacteristic;
            BusinessUnitBookableresourcegroup = businessUnitBookableresourcegroup;
            BusinessUnitBookingstatus = businessUnitBookingstatus;
            BusinessUnitCharacteristic = businessUnitCharacteristic;
            BusinessUnitRatingmodel = businessUnitRatingmodel;
            BusinessUnitRatingvalue = businessUnitRatingvalue;
            BusinessUnitSyncErrors = businessUnitSyncErrors;
            BusinessUnitLeads = businessUnitLeads;
            Transactioncurrencyid = transactioncurrencyid;
            BulkDeleteOperationBusinessUnit = bulkDeleteOperationBusinessUnit;
            Modifiedby = modifiedby;
            BusinessUnitWorkflow = businessUnitWorkflow;
            BusinessUnitSyncError = businessUnitSyncError;
            BusinessUnitPostRegarding = businessUnitPostRegarding;
            BusinessUnitPostfollows = businessUnitPostfollows;
            BusinessUnitAsyncOperations = businessUnitAsyncOperations;
            BusinessUnitQueues = businessUnitQueues;
            BusinessUnitFaxActivities = businessUnitFaxActivities;
            BusinessUnitCalendars = businessUnitCalendars;
            Createdonbehalfby = createdonbehalfby;
            BusinessUnitInvoices = businessUnitInvoices;
            BusinessUnitQuotes = businessUnitQuotes;
            BusinessUnitImportLogs = businessUnitImportLogs;
            BusinessUnitAnnotations = businessUnitAnnotations;
            Calendarid = calendarid;
            BusinessUnitOpportunities = businessUnitOpportunities;
            BusinessUnitRecurringappointmentmasterActivities = businessUnitRecurringappointmentmasterActivities;
            BusinessUnitTemplates = businessUnitTemplates;
            BusinessUnitDynamicproperyinstance = businessUnitDynamicproperyinstance;
            BusinessUnitAccounts = businessUnitAccounts;
            BusinessUnitResourceSpecs = businessUnitResourceSpecs;
            BusinessUnitOrders = businessUnitOrders;
            BusinessUnitOrderCloseActivities = businessUnitOrderCloseActivities;
            BusinessUnitSocialprofiles = businessUnitSocialprofiles;
            BusinessUnitAppointmentActivities = businessUnitAppointmentActivities;
            BusinessUnitLetterActivities = businessUnitLetterActivities;
            BusinessUnitActioncards = businessUnitActioncards;
            BusinessUnitTaskActivities = businessUnitTaskActivities;
            BusinessUnitActivitypointer = businessUnitActivitypointer;
            BusinessUnitList = businessUnitList;
            BusinessUnitQueues2 = businessUnitQueues2;
            BusinessUnitAsyncoperation = businessUnitAsyncoperation;
            BusinessUnitEmailActivities = businessUnitEmailActivities;
            BusinessUnitRoles = businessUnitRoles;
            BusinessUnitResourceGroups = businessUnitResourceGroups;
            BusinessUnitTeams = businessUnitTeams;
            BusinessUnitEquipment = businessUnitEquipment;
            Createdby = createdby;
            BusinessUnitUserqueryvisualizations = businessUnitUserqueryvisualizations;
            BusinessUnitSlakpiinstance = businessUnitSlakpiinstance;
            BusinessUnitDuplicateRules = businessUnitDuplicateRules;
            Modifiedonbehalfby = modifiedonbehalfby;
            BusinessUnitCampaigns = businessUnitCampaigns;
            BusinessUnitImportData = businessUnitImportData;
            Organizationid = organizationid;
            BusinessUnitPhoneCallActivities = businessUnitPhoneCallActivities;
            BusinessUnitServiceContracts = businessUnitServiceContracts;
            BusinessUnitIncidents = businessUnitIncidents;
            BusinessUnitContacts = businessUnitContacts;
            BusinessUnitSharepointsites = businessUnitSharepointsites;
            BusinessUnitEmailserverprofile = businessUnitEmailserverprofile;
            BusinessUnitMailmergetemplates = businessUnitMailmergetemplates;
            BusinessUnitBulkOperationActivities = businessUnitBulkOperationActivities;
            BusinessUnitWorkflowlogs = businessUnitWorkflowlogs;
            BusinessUnitResources = businessUnitResources;
            BusinessUnitBulkDeleteFailures = businessUnitBulkDeleteFailures;
            BusinessUnitQuoteCloseActivities = businessUnitQuoteCloseActivities;
            BusinessUnitConnections = businessUnitConnections;
            BusinessUnitPersonaldocumenttemplates = businessUnitPersonaldocumenttemplates;
            BusinessUnitCampaignresponseActivities = businessUnitCampaignresponseActivities;
            BusinessUnitImportFiles = businessUnitImportFiles;
            BusinessUnitFeedback = businessUnitFeedback;
            BusinessUnitReports = businessUnitReports;
            BusinessUnitUserSettings = businessUnitUserSettings;
            BusinessUnitIncidentResolutionActivities = businessUnitIncidentResolutionActivities;
            BusinessUnitConstraintBasedGroups = businessUnitConstraintBasedGroups;
            BusinessUnitImports = businessUnitImports;
            BusinessUnitCategory = businessUnitCategory;
            BusinessUnitSystemUsers = businessUnitSystemUsers;
            BusinessUnitSlabase = businessUnitSlabase;
            BusinessUnitUserform = businessUnitUserform;
            BusinessUnitSocialactivity = businessUnitSocialactivity;
            BusinessUnitGoalrollupquery = businessUnitGoalrollupquery;
            BusinessUnitUserquery = businessUnitUserquery;
            BusinessUnitServiceAppointments = businessUnitServiceAppointments;
            BusinessUnitImportMaps = businessUnitImportMaps;
            BusinessUnitCampaignactivityActivities = businessUnitCampaignactivityActivities;
            BusinessUnitOpportunityCloseActivities = businessUnitOpportunityCloseActivities;
            Parentbusinessunitid = parentbusinessunitid;
            BusinessUnitParentBusinessUnit = businessUnitParentBusinessUnit;
            BusinessUnitAbsAutonumberedentity = businessUnitAbsAutonumberedentity;
            BusinessUnitAbsScheduledprocess = businessUnitAbsScheduledprocess;
            AbsScheduledprocessexecutionBusinessunitOwningbusinessunit = absScheduledprocessexecutionBusinessunitOwningbusinessunit;
            BusinessUnitBcgovApplicationtype = businessUnitBcgovApplicationtype;
            BusinessUnitBcgovBusinesscontact = businessUnitBcgovBusinesscontact;
            BusinessUnitBcgovCertificate = businessUnitBcgovCertificate;
            BusinessUnitBcgovCertificateapprovedproduct = businessUnitBcgovCertificateapprovedproduct;
            BusinessUnitBcgovCertificatetermsandconditions = businessUnitBcgovCertificatetermsandconditions;
            BusinessUnitBcgovCustomaddress = businessUnitBcgovCustomaddress;
            BusinessUnitBcgovCustomproduct = businessUnitBcgovCustomproduct;
            BusinessUnitBcgovEquipment = businessUnitBcgovEquipment;
            BusinessUnitBcgovEquipmentlocation = businessUnitBcgovEquipmentlocation;
            BusinessUnitBcgovLocation = businessUnitBcgovLocation;
            BusinessUnitBcgovRiskassessment = businessUnitBcgovRiskassessment;
            BusinessUnitBcgovTermsconditionspreset = businessUnitBcgovTermsconditionspreset;
            BusinessUnitBcgovInspection = businessUnitBcgovInspection;
            BusinessUnitBcgovRegion = businessUnitBcgovRegion;
            BusinessUnitBcgovPostalcode = businessUnitBcgovPostalcode;
            BusinessUnitBcgovInspectionownershipcategory = businessUnitBcgovInspectionownershipcategory;
            BusinessUnitBcgovActregulationreference = businessUnitBcgovActregulationreference;
            BusinessUnitBcgovCustomuser = businessUnitBcgovCustomuser;
            BusinessUnitBcgovInspectionchecklist = businessUnitBcgovInspectionchecklist;
            BusinessUnitBcgovRole = businessUnitBcgovRole;
            BusinessUnitBcgovComplaint = businessUnitBcgovComplaint;
            BusinessUnitBcgovViolationticket = businessUnitBcgovViolationticket;
            BusinessUnitBcgovInvestigationstep = businessUnitBcgovInvestigationstep;
            BusinessUnitBcgovCecontacttype = businessUnitBcgovCecontacttype;
            BusinessUnitBcgovCecontact = businessUnitBcgovCecontact;
            BusinessUnitBcgovArea = businessUnitBcgovArea;
            BusinessUnitBcgovInvestigation = businessUnitBcgovInvestigation;
            BusinessUnitBcgovComplaintchecklist = businessUnitBcgovComplaintchecklist;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets second line for entering address 1 information.
        /// </summary>
        [JsonProperty(PropertyName = "address1_line2")]
        public string Address1Line2 { get; set; }

        /// <summary>
        /// Gets or sets state or province for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_stateorprovince")]
        public string Address1Stateorprovince { get; set; }

        /// <summary>
        /// Gets or sets type of address for address 1, such as billing,
        /// shipping, or primary address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_addresstypecode")]
        public int? Address1Addresstypecode { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the organization associated with
        /// the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "_organizationid_value")]
        public string _organizationidValue { get; set; }

        /// <summary>
        /// Gets or sets type of address for address 2, such as billing,
        /// shipping, or primary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_addresstypecode")]
        public int? Address2Addresstypecode { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the delegate user who last
        /// modified the businessunit.
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedonbehalfby_value")]
        public string _modifiedonbehalfbyValue { get; set; }

        /// <summary>
        /// Gets or sets unique identifier for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_addressid")]
        public string Address2Addressid { get; set; }

        /// <summary>
        /// Gets or sets credit limit for the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "creditlimit")]
        public decimal? Creditlimit { get; set; }

        /// <summary>
        /// Gets or sets exchange rate for the currency associated with the
        /// businessunit with respect to the base currency.
        /// </summary>
        [JsonProperty(PropertyName = "exchangerate")]
        public decimal? Exchangerate { get; set; }

        /// <summary>
        /// Gets or sets email address for the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "emailaddress")]
        public string Emailaddress { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the user who last modified the
        /// business unit.
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedby_value")]
        public string _modifiedbyValue { get; set; }

        /// <summary>
        /// Gets or sets stock exchange on which the business is listed.
        /// </summary>
        [JsonProperty(PropertyName = "stockexchange")]
        public string Stockexchange { get; set; }

        /// <summary>
        /// Gets or sets first telephone number associated with address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_telephone1")]
        public string Address1Telephone1 { get; set; }

        /// <summary>
        /// Gets or sets method of shipment for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_shippingmethodcode")]
        public int? Address2Shippingmethodcode { get; set; }

        /// <summary>
        /// Gets or sets country/region name for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_country")]
        public string Address2Country { get; set; }

        /// <summary>
        /// Gets or sets name to enter for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_name")]
        public string Address2Name { get; set; }

        /// <summary>
        /// Gets or sets version number of the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "versionnumber")]
        public string Versionnumber { get; set; }

        /// <summary>
        /// Gets or sets date and time when the business unit was created.
        /// </summary>
        [JsonProperty(PropertyName = "createdon")]
        public System.DateTimeOffset? Createdon { get; set; }

        /// <summary>
        /// Gets or sets stock exchange ticker symbol for the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "tickersymbol")]
        public string Tickersymbol { get; set; }

        /// <summary>
        /// Gets or sets UTC offset for address 2. This is the difference
        /// between local time and standard Coordinated Universal Time.
        /// </summary>
        [JsonProperty(PropertyName = "address2_utcoffset")]
        public int? Address2Utcoffset { get; set; }

        /// <summary>
        /// Gets or sets latitude for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_latitude")]
        public decimal? Address2Latitude { get; set; }

        /// <summary>
        /// Gets or sets name of the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets unique identifier for the parent business unit.
        /// </summary>
        [JsonProperty(PropertyName = "_parentbusinessunitid_value")]
        public string _parentbusinessunitidValue { get; set; }

        /// <summary>
        /// Gets or sets fax number for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_fax")]
        public string Address2Fax { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the data import or data migration
        /// that created this record.
        /// </summary>
        [JsonProperty(PropertyName = "importsequencenumber")]
        public int? Importsequencenumber { get; set; }

        /// <summary>
        /// Gets or sets picture or diagram of the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "picture")]
        public string Picture { get; set; }

        /// <summary>
        /// Gets or sets county name for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_county")]
        public string Address1County { get; set; }

        /// <summary>
        /// Gets or sets first line for entering address 2 information.
        /// </summary>
        [JsonProperty(PropertyName = "address2_line1")]
        public string Address2Line1 { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the delegate user who created the
        /// businessunit.
        /// </summary>
        [JsonProperty(PropertyName = "_createdonbehalfby_value")]
        public string _createdonbehalfbyValue { get; set; }

        /// <summary>
        /// Gets or sets second telephone number associated with address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_telephone2")]
        public string Address2Telephone2 { get; set; }

        /// <summary>
        /// Gets or sets name of the division to which the business unit
        /// belongs.
        /// </summary>
        [JsonProperty(PropertyName = "divisionname")]
        public string Divisionname { get; set; }

        /// <summary>
        /// Gets or sets website URL for the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "websiteurl")]
        public string Websiteurl { get; set; }

        /// <summary>
        /// Gets or sets first telephone number associated with address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_telephone1")]
        public string Address2Telephone1 { get; set; }

        /// <summary>
        /// Gets or sets post office box number for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_postofficebox")]
        public string Address2Postofficebox { get; set; }

        /// <summary>
        /// Gets or sets alternative name under which the business unit can be
        /// filed.
        /// </summary>
        [JsonProperty(PropertyName = "fileasname")]
        public string Fileasname { get; set; }

        /// <summary>
        /// Gets or sets third telephone number associated with address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_telephone3")]
        public string Address1Telephone3 { get; set; }

        /// <summary>
        /// Gets or sets first line for entering address 1 information.
        /// </summary>
        [JsonProperty(PropertyName = "address1_line1")]
        public string Address1Line1 { get; set; }

        /// <summary>
        /// Gets or sets third line for entering address 2 information.
        /// </summary>
        [JsonProperty(PropertyName = "address2_line3")]
        public string Address2Line3 { get; set; }

        /// <summary>
        /// Gets or sets city name for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_city")]
        public string Address1City { get; set; }

        /// <summary>
        /// Gets or sets date and time when the business unit was last
        /// modified.
        /// </summary>
        [JsonProperty(PropertyName = "modifiedon")]
        public System.DateTimeOffset? Modifiedon { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "businessunitid")]
        public string Businessunitid { get; set; }

        /// <summary>
        /// Gets or sets UTC offset for the business unit. This is the
        /// difference between local time and standard Coordinated Universal
        /// Time.
        /// </summary>
        [JsonProperty(PropertyName = "utcoffset")]
        public int? Utcoffset { get; set; }

        /// <summary>
        /// Gets or sets longitude for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_longitude")]
        public decimal? Address2Longitude { get; set; }

        /// <summary>
        /// Gets or sets method of shipment for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_shippingmethodcode")]
        public int? Address1Shippingmethodcode { get; set; }

        /// <summary>
        /// Gets or sets latitude for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_latitude")]
        public decimal? Address1Latitude { get; set; }

        /// <summary>
        /// Gets or sets inheritance mask for the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "inheritancemask")]
        public int? Inheritancemask { get; set; }

        /// <summary>
        /// Gets or sets name of the business unit cost center.
        /// </summary>
        [JsonProperty(PropertyName = "costcenter")]
        public string Costcenter { get; set; }

        /// <summary>
        /// Gets or sets UTC offset for address 1. This is the difference
        /// between local time and standard Coordinated Universal Time.
        /// </summary>
        [JsonProperty(PropertyName = "address1_utcoffset")]
        public int? Address1Utcoffset { get; set; }

        /// <summary>
        /// Gets or sets second line for entering address 2 information.
        /// </summary>
        [JsonProperty(PropertyName = "address2_line2")]
        public string Address2Line2 { get; set; }

        /// <summary>
        /// Gets or sets fax number for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_fax")]
        public string Address1Fax { get; set; }

        /// <summary>
        /// Gets or sets name to enter for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_name")]
        public string Address1Name { get; set; }

        /// <summary>
        /// Gets or sets third line for entering address 1 information.
        /// </summary>
        [JsonProperty(PropertyName = "address1_line3")]
        public string Address1Line3 { get; set; }

        /// <summary>
        /// Gets or sets third telephone number associated with address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_telephone3")]
        public string Address2Telephone3 { get; set; }

        /// <summary>
        /// Gets or sets longitude for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_longitude")]
        public decimal? Address1Longitude { get; set; }

        /// <summary>
        /// Gets or sets united Parcel Service (UPS) zone for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_upszone")]
        public string Address2Upszone { get; set; }

        /// <summary>
        /// Gets or sets fiscal calendar associated with the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "_calendarid_value")]
        public string _calendaridValue { get; set; }

        /// <summary>
        /// Gets or sets county name for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_county")]
        public string Address2County { get; set; }

        /// <summary>
        /// Gets or sets city name for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_city")]
        public string Address2City { get; set; }

        /// <summary>
        /// Gets or sets post office box number for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_postofficebox")]
        public string Address1Postofficebox { get; set; }

        /// <summary>
        /// Gets or sets information about whether workflow or sales process
        /// rules have been suspended.
        /// </summary>
        [JsonProperty(PropertyName = "workflowsuspended")]
        public bool? Workflowsuspended { get; set; }

        /// <summary>
        /// Gets or sets ZIP Code or postal code for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_postalcode")]
        public string Address1Postalcode { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the user who created the business
        /// unit.
        /// </summary>
        [JsonProperty(PropertyName = "_createdby_value")]
        public string _createdbyValue { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the currency associated with the
        /// businessunit.
        /// </summary>
        [JsonProperty(PropertyName = "_transactioncurrencyid_value")]
        public string _transactioncurrencyidValue { get; set; }

        /// <summary>
        /// Gets or sets second telephone number associated with address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_telephone2")]
        public string Address1Telephone2 { get; set; }

        /// <summary>
        /// Gets or sets united Parcel Service (UPS) zone for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_upszone")]
        public string Address1Upszone { get; set; }

        /// <summary>
        /// Gets or sets state or province for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_stateorprovince")]
        public string Address2Stateorprovince { get; set; }

        /// <summary>
        /// Gets or sets date and time that the record was migrated.
        /// </summary>
        [JsonProperty(PropertyName = "overriddencreatedon")]
        public System.DateTimeOffset? Overriddencreatedon { get; set; }

        /// <summary>
        /// Gets or sets ZIP Code or postal code for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_postalcode")]
        public string Address2Postalcode { get; set; }

        /// <summary>
        /// Gets or sets country/region name for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_country")]
        public string Address1Country { get; set; }

        /// <summary>
        /// Gets or sets description of the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets information about whether the business unit is enabled
        /// or disabled.
        /// </summary>
        [JsonProperty(PropertyName = "isdisabled")]
        public bool? Isdisabled { get; set; }

        /// <summary>
        /// Gets or sets unique identifier for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_addressid")]
        public string Address1Addressid { get; set; }

        /// <summary>
        /// Gets or sets reason for disabling the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "disabledreason")]
        public string Disabledreason { get; set; }

        /// <summary>
        /// Gets or sets FTP site URL for the business unit.
        /// </summary>
        [JsonProperty(PropertyName = "ftpsiteurl")]
        public string Ftpsiteurl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_exchangesyncidmapping")]
        public IList<MicrosoftDynamicsCRMexchangesyncidmapping> BusinessUnitExchangesyncidmapping { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_new_interactionforemail")]
        public IList<MicrosoftDynamicsCRMinteractionforemail> BusinessUnitNewInteractionforemail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_knowledgearticle")]
        public IList<MicrosoftDynamicsCRMknowledgearticle> BusinessUnitKnowledgearticle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_sharepointdocumentlocation")]
        public IList<MicrosoftDynamicsCRMsharepointdocumentlocation> BusinessUnitSharepointdocumentlocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_entitlement")]
        public IList<MicrosoftDynamicsCRMentitlement> BusinessUnitEntitlement { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_goal")]
        public IList<MicrosoftDynamicsCRMgoal> BusinessUnitGoal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_mailbox")]
        public IList<MicrosoftDynamicsCRMmailbox> BusinessUnitMailbox { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bookableresource")]
        public IList<MicrosoftDynamicsCRMbookableresource> BusinessUnitBookableresource { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bookableresourcebooking")]
        public IList<MicrosoftDynamicsCRMbookableresourcebooking> BusinessUnitBookableresourcebooking { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bookableresourcebookingheader")]
        public IList<MicrosoftDynamicsCRMbookableresourcebookingheader> BusinessUnitBookableresourcebookingheader { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bookableresourcecategory")]
        public IList<MicrosoftDynamicsCRMbookableresourcecategory> BusinessUnitBookableresourcecategory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bookableresourcecategoryassn")]
        public IList<MicrosoftDynamicsCRMbookableresourcecategoryassn> BusinessUnitBookableresourcecategoryassn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bookableresourcecharacteristic")]
        public IList<MicrosoftDynamicsCRMbookableresourcecharacteristic> BusinessUnitBookableresourcecharacteristic { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bookableresourcegroup")]
        public IList<MicrosoftDynamicsCRMbookableresourcegroup> BusinessUnitBookableresourcegroup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bookingstatus")]
        public IList<MicrosoftDynamicsCRMbookingstatus> BusinessUnitBookingstatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_characteristic")]
        public IList<MicrosoftDynamicsCRMcharacteristic> BusinessUnitCharacteristic { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_ratingmodel")]
        public IList<MicrosoftDynamicsCRMratingmodel> BusinessUnitRatingmodel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_ratingvalue")]
        public IList<MicrosoftDynamicsCRMratingvalue> BusinessUnitRatingvalue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessUnit_SyncErrors")]
        public IList<MicrosoftDynamicsCRMsyncerror> BusinessUnitSyncErrors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_leads")]
        public IList<MicrosoftDynamicsCRMlead> BusinessUnitLeads { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactioncurrencyid")]
        public MicrosoftDynamicsCRMtransactioncurrency Transactioncurrencyid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BulkDeleteOperation_BusinessUnit")]
        public IList<MicrosoftDynamicsCRMbulkdeleteoperation> BulkDeleteOperationBusinessUnit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_workflow")]
        public IList<MicrosoftDynamicsCRMworkflow> BusinessUnitWorkflow { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessUnit_SyncError")]
        public IList<MicrosoftDynamicsCRMsyncerror> BusinessUnitSyncError { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_PostRegarding")]
        public IList<MicrosoftDynamicsCRMpostregarding> BusinessUnitPostRegarding { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_postfollows")]
        public IList<MicrosoftDynamicsCRMpostfollow> BusinessUnitPostfollows { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessUnit_AsyncOperations")]
        public IList<MicrosoftDynamicsCRMasyncoperation> BusinessUnitAsyncOperations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_queues")]
        public IList<MicrosoftDynamicsCRMqueue> BusinessUnitQueues { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_fax_activities")]
        public IList<MicrosoftDynamicsCRMfax> BusinessUnitFaxActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_calendars")]
        public IList<MicrosoftDynamicsCRMcalendar> BusinessUnitCalendars { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Createdonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_invoices")]
        public IList<MicrosoftDynamicsCRMinvoice> BusinessUnitInvoices { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_quotes")]
        public IList<MicrosoftDynamicsCRMquote> BusinessUnitQuotes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessUnit_ImportLogs")]
        public IList<MicrosoftDynamicsCRMimportlog> BusinessUnitImportLogs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_annotations")]
        public IList<MicrosoftDynamicsCRMannotation> BusinessUnitAnnotations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "calendarid")]
        public MicrosoftDynamicsCRMcalendar Calendarid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_opportunities")]
        public IList<MicrosoftDynamicsCRMopportunity> BusinessUnitOpportunities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_recurringappointmentmaster_activities")]
        public IList<MicrosoftDynamicsCRMrecurringappointmentmaster> BusinessUnitRecurringappointmentmasterActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_templates")]
        public IList<MicrosoftDynamicsCRMtemplate> BusinessUnitTemplates { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_dynamicproperyinstance")]
        public IList<MicrosoftDynamicsCRMdynamicpropertyinstance> BusinessUnitDynamicproperyinstance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_accounts")]
        public IList<MicrosoftDynamicsCRMaccount> BusinessUnitAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_resource_specs")]
        public IList<MicrosoftDynamicsCRMresourcespec> BusinessUnitResourceSpecs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_orders")]
        public IList<MicrosoftDynamicsCRMsalesorder> BusinessUnitOrders { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_order_close_activities")]
        public IList<MicrosoftDynamicsCRMorderclose> BusinessUnitOrderCloseActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_socialprofiles")]
        public IList<MicrosoftDynamicsCRMsocialprofile> BusinessUnitSocialprofiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_appointment_activities")]
        public IList<MicrosoftDynamicsCRMappointment> BusinessUnitAppointmentActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_letter_activities")]
        public IList<MicrosoftDynamicsCRMletter> BusinessUnitLetterActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_actioncards")]
        public IList<MicrosoftDynamicsCRMactioncard> BusinessUnitActioncards { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_task_activities")]
        public IList<MicrosoftDynamicsCRMtask> BusinessUnitTaskActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_activitypointer")]
        public IList<MicrosoftDynamicsCRMactivitypointer> BusinessUnitActivitypointer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_list")]
        public IList<MicrosoftDynamicsCRMlist> BusinessUnitList { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_queues2")]
        public IList<MicrosoftDynamicsCRMqueue> BusinessUnitQueues2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_asyncoperation")]
        public IList<MicrosoftDynamicsCRMasyncoperation> BusinessUnitAsyncoperation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_email_activities")]
        public IList<MicrosoftDynamicsCRMemail> BusinessUnitEmailActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_roles")]
        public IList<MicrosoftDynamicsCRMrole> BusinessUnitRoles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_resource_groups")]
        public IList<MicrosoftDynamicsCRMresourcegroup> BusinessUnitResourceGroups { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_teams")]
        public IList<MicrosoftDynamicsCRMteam> BusinessUnitTeams { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_equipment")]
        public IList<MicrosoftDynamicsCRMequipment> BusinessUnitEquipment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdby")]
        public MicrosoftDynamicsCRMsystemuser Createdby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_userqueryvisualizations")]
        public IList<MicrosoftDynamicsCRMuserqueryvisualization> BusinessUnitUserqueryvisualizations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_slakpiinstance")]
        public IList<MicrosoftDynamicsCRMslakpiinstance> BusinessUnitSlakpiinstance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessUnit_DuplicateRules")]
        public IList<MicrosoftDynamicsCRMduplicaterule> BusinessUnitDuplicateRules { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessUnit_Campaigns")]
        public IList<MicrosoftDynamicsCRMcampaign> BusinessUnitCampaigns { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessUnit_ImportData")]
        public IList<MicrosoftDynamicsCRMimportdata> BusinessUnitImportData { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "organizationid")]
        public MicrosoftDynamicsCRMorganization Organizationid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_phone_call_activities")]
        public IList<MicrosoftDynamicsCRMphonecall> BusinessUnitPhoneCallActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_service_contracts")]
        public IList<MicrosoftDynamicsCRMcontract> BusinessUnitServiceContracts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_incidents")]
        public IList<MicrosoftDynamicsCRMincident> BusinessUnitIncidents { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_contacts")]
        public IList<MicrosoftDynamicsCRMcontact> BusinessUnitContacts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_sharepointsites")]
        public IList<MicrosoftDynamicsCRMsharepointsite> BusinessUnitSharepointsites { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_emailserverprofile")]
        public IList<MicrosoftDynamicsCRMemailserverprofile> BusinessUnitEmailserverprofile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_mailmergetemplates")]
        public IList<MicrosoftDynamicsCRMmailmergetemplate> BusinessUnitMailmergetemplates { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_BulkOperation_activities")]
        public IList<MicrosoftDynamicsCRMbulkoperation> BusinessUnitBulkOperationActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_workflowlogs")]
        public IList<MicrosoftDynamicsCRMworkflowlog> BusinessUnitWorkflowlogs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_resources")]
        public IList<MicrosoftDynamicsCRMresource> BusinessUnitResources { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessUnit_BulkDeleteFailures")]
        public IList<MicrosoftDynamicsCRMbulkdeletefailure> BusinessUnitBulkDeleteFailures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_quote_close_activities")]
        public IList<MicrosoftDynamicsCRMquoteclose> BusinessUnitQuoteCloseActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_connections")]
        public IList<MicrosoftDynamicsCRMconnection> BusinessUnitConnections { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_personaldocumenttemplates")]
        public IList<MicrosoftDynamicsCRMpersonaldocumenttemplate> BusinessUnitPersonaldocumenttemplates { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_campaignresponse_activities")]
        public IList<MicrosoftDynamicsCRMcampaignresponse> BusinessUnitCampaignresponseActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessUnit_ImportFiles")]
        public IList<MicrosoftDynamicsCRMimportfile> BusinessUnitImportFiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_feedback")]
        public IList<MicrosoftDynamicsCRMfeedback> BusinessUnitFeedback { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_reports")]
        public IList<MicrosoftDynamicsCRMreport> BusinessUnitReports { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_user_settings")]
        public IList<MicrosoftDynamicsCRMusersettings> BusinessUnitUserSettings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_incident_resolution_activities")]
        public IList<MicrosoftDynamicsCRMincidentresolution> BusinessUnitIncidentResolutionActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_constraint_based_groups")]
        public IList<MicrosoftDynamicsCRMconstraintbasedgroup> BusinessUnitConstraintBasedGroups { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessUnit_Imports")]
        public IList<MicrosoftDynamicsCRMimport> BusinessUnitImports { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_category")]
        public IList<MicrosoftDynamicsCRMcategory> BusinessUnitCategory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_system_users")]
        public IList<MicrosoftDynamicsCRMsystemuser> BusinessUnitSystemUsers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_slabase")]
        public IList<MicrosoftDynamicsCRMsla> BusinessUnitSlabase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_userform")]
        public IList<MicrosoftDynamicsCRMuserform> BusinessUnitUserform { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_socialactivity")]
        public IList<MicrosoftDynamicsCRMsocialactivity> BusinessUnitSocialactivity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_goalrollupquery")]
        public IList<MicrosoftDynamicsCRMgoalrollupquery> BusinessUnitGoalrollupquery { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_userquery")]
        public IList<MicrosoftDynamicsCRMuserquery> BusinessUnitUserquery { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_service_appointments")]
        public IList<MicrosoftDynamicsCRMserviceappointment> BusinessUnitServiceAppointments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessUnit_ImportMaps")]
        public IList<MicrosoftDynamicsCRMimportmap> BusinessUnitImportMaps { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_campaignactivity_activities")]
        public IList<MicrosoftDynamicsCRMcampaignactivity> BusinessUnitCampaignactivityActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_opportunity_close_activities")]
        public IList<MicrosoftDynamicsCRMopportunityclose> BusinessUnitOpportunityCloseActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentbusinessunitid")]
        public MicrosoftDynamicsCRMbusinessunit Parentbusinessunitid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_parent_business_unit")]
        public IList<MicrosoftDynamicsCRMbusinessunit> BusinessUnitParentBusinessUnit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_abs_autonumberedentity")]
        public IList<MicrosoftDynamicsCRMabsAutonumberedentity> BusinessUnitAbsAutonumberedentity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_abs_scheduledprocess")]
        public IList<MicrosoftDynamicsCRMabsScheduledprocess> BusinessUnitAbsScheduledprocess { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "abs_scheduledprocessexecution_businessunit_owningbusinessunit")]
        public IList<MicrosoftDynamicsCRMabsScheduledprocessexecution> AbsScheduledprocessexecutionBusinessunitOwningbusinessunit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_applicationtype")]
        public IList<MicrosoftDynamicsCRMbcgovApplicationtype> BusinessUnitBcgovApplicationtype { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_businesscontact")]
        public IList<MicrosoftDynamicsCRMbcgovBusinesscontact> BusinessUnitBcgovBusinesscontact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_certificate")]
        public IList<MicrosoftDynamicsCRMbcgovCertificate> BusinessUnitBcgovCertificate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_certificateapprovedproduct")]
        public IList<MicrosoftDynamicsCRMbcgovCertificateapprovedproduct> BusinessUnitBcgovCertificateapprovedproduct { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_certificatetermsandconditions")]
        public IList<MicrosoftDynamicsCRMbcgovCertificatetermsandconditions> BusinessUnitBcgovCertificatetermsandconditions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_customaddress")]
        public IList<MicrosoftDynamicsCRMbcgovCustomaddress> BusinessUnitBcgovCustomaddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_customproduct")]
        public IList<MicrosoftDynamicsCRMbcgovCustomproduct> BusinessUnitBcgovCustomproduct { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_equipment")]
        public IList<MicrosoftDynamicsCRMbcgovEquipment> BusinessUnitBcgovEquipment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_equipmentlocation")]
        public IList<MicrosoftDynamicsCRMbcgovEquipmentlocation> BusinessUnitBcgovEquipmentlocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_location")]
        public IList<MicrosoftDynamicsCRMbcgovLocation> BusinessUnitBcgovLocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_riskassessment")]
        public IList<MicrosoftDynamicsCRMbcgovRiskassessment> BusinessUnitBcgovRiskassessment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_termsconditionspreset")]
        public IList<MicrosoftDynamicsCRMbcgovTermsconditionspreset> BusinessUnitBcgovTermsconditionspreset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_inspection")]
        public IList<MicrosoftDynamicsCRMbcgovInspection> BusinessUnitBcgovInspection { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_region")]
        public IList<MicrosoftDynamicsCRMbcgovRegion> BusinessUnitBcgovRegion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_postalcode")]
        public IList<MicrosoftDynamicsCRMbcgovPostalcode> BusinessUnitBcgovPostalcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_inspectionownershipcategory")]
        public IList<MicrosoftDynamicsCRMbcgovInspectionownershipcategory> BusinessUnitBcgovInspectionownershipcategory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_actregulationreference")]
        public IList<MicrosoftDynamicsCRMbcgovActregulationreference> BusinessUnitBcgovActregulationreference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_customuser")]
        public IList<MicrosoftDynamicsCRMbcgovCustomuser> BusinessUnitBcgovCustomuser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_inspectionchecklist")]
        public IList<MicrosoftDynamicsCRMbcgovInspectionchecklist> BusinessUnitBcgovInspectionchecklist { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_role")]
        public IList<MicrosoftDynamicsCRMbcgovRole> BusinessUnitBcgovRole { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_complaint")]
        public IList<MicrosoftDynamicsCRMbcgovComplaint> BusinessUnitBcgovComplaint { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_violationticket")]
        public IList<MicrosoftDynamicsCRMbcgovViolationticket> BusinessUnitBcgovViolationticket { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_investigationstep")]
        public IList<MicrosoftDynamicsCRMbcgovInvestigationstep> BusinessUnitBcgovInvestigationstep { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_cecontacttype")]
        public IList<MicrosoftDynamicsCRMbcgovCecontacttype> BusinessUnitBcgovCecontacttype { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_cecontact")]
        public IList<MicrosoftDynamicsCRMbcgovCecontact> BusinessUnitBcgovCecontact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_area")]
        public IList<MicrosoftDynamicsCRMbcgovArea> BusinessUnitBcgovArea { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_investigation")]
        public IList<MicrosoftDynamicsCRMbcgovInvestigation> BusinessUnitBcgovInvestigation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "business_unit_bcgov_complaintchecklist")]
        public IList<MicrosoftDynamicsCRMbcgovComplaintchecklist> BusinessUnitBcgovComplaintchecklist { get; set; }

    }
}
