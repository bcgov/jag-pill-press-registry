// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Jag.PillPressRegistry.Interfaces.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Microsoft.Dynamics.CRM.account
    /// </summary>
    public partial class MicrosoftDynamicsCRMaccount
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMaccount
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMaccount()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMaccount
        /// class.
        /// </summary>
        /// <param name="openrevenue">Sum of open revenue against an account
        /// and its child accounts.</param>
        /// <param name="territorycode">Select a region or territory for the
        /// account for use in segmentation and analysis.</param>
        /// <param name="lastusedincampaign">Shows the date when the account
        /// was last included in a marketing campaign or quick
        /// campaign.</param>
        /// <param name="address1Name">Type a descriptive name for the primary
        /// address, such as Corporate Headquarters.</param>
        /// <param name="address1Telephone2">Type a second phone number
        /// associated with the primary address.</param>
        /// <param name="overriddencreatedon">Date and time that the record was
        /// migrated.</param>
        /// <param name="entityimageid">For internal use only.</param>
        /// <param name="ownershipcode">Select the account's ownership
        /// structure, such as public or private.</param>
        /// <param name="customersizecode">Select the size category or range of
        /// the account for segmentation and reporting purposes.</param>
        /// <param name="creditlimit">Type the credit limit of the account.
        /// This is a useful reference when you address invoice and accounting
        /// issues with the customer.</param>
        /// <param name="_primarycontactidValue">Choose the primary contact for
        /// the business profile to provide quick access to contact
        /// details.</param>
        /// <param name="versionnumber">Version number of the account.</param>
        /// <param name="address1County">Type the county for the primary
        /// address.</param>
        /// <param name="telephone3">Type a third phone number for this
        /// account.</param>
        /// <param name="openrevenueDate">The date time for Open
        /// Revenue.</param>
        /// <param name="donotbulkpostalmail">Select whether the account allows
        /// bulk postal mail sent through marketing campaigns or quick
        /// campaigns. If Do Not Allow is selected, the account can be added to
        /// marketing lists, but will be excluded from the postal mail.</param>
        /// <param name="address1Freighttermscode">Select the freight terms for
        /// the primary address to make sure shipping orders are processed
        /// correctly.</param>
        /// <param name="address2Line1">Type the first line of the secondary
        /// address.</param>
        /// <param name="onholdtime">Shows how long, in minutes, that the
        /// record was on hold.</param>
        /// <param name="donotpostalmail">Select whether the account allows
        /// direct mail. If Do Not Allow is selected, the account will be
        /// excluded from letter activities distributed in marketing
        /// campaigns.</param>
        /// <param name="_createdbyexternalpartyValue">Shows the external party
        /// who created the record.</param>
        /// <param name="telephone2">Type a second phone number for this
        /// account.</param>
        /// <param name="_owningbusinessunitValue">Shows the business unit that
        /// the record owner belongs to.</param>
        /// <param name="primarysatoriid">Primary Satori ID for Account</param>
        /// <param name="shippingmethodcode">Select a shipping method for
        /// deliveries sent to the account's address to designate the preferred
        /// carrier or other delivery option.</param>
        /// <param name="address1Addressid">Unique identifier for address
        /// 1.</param>
        /// <param name="address2Telephone1">Type the main phone number
        /// associated with the secondary address.</param>
        /// <param name="address1Fax">Type the fax number associated with the
        /// primary address.</param>
        /// <param name="_owneridValue">Enter the user or team who is assigned
        /// to manage the record. This field is updated every time the record
        /// is assigned to a different user.</param>
        /// <param name="_createdonbehalfbyValue">Shows who created the record
        /// on behalf of another user.</param>
        /// <param name="preferredcontactmethodcode">Select the preferred
        /// method of contact.</param>
        /// <param name="address2City">Type the city for the secondary
        /// address.</param>
        /// <param name="address2Latitude">Type the latitude value for the
        /// secondary address for use in mapping and other
        /// applications.</param>
        /// <param name="address2Composite">Shows the complete secondary
        /// address.</param>
        /// <param name="creditlimitBase">Shows the credit limit converted to
        /// the system's default base currency for reporting purposes.</param>
        /// <param name="aging90Base">The base currency equivalent of the aging
        /// 90 field.</param>
        /// <param name="address2Postalcode">Type the ZIP Code or postal code
        /// for the secondary address.</param>
        /// <param name="address2Name">Type a descriptive name for the
        /// secondary address, such as Corporate Headquarters.</param>
        /// <param name="merged">Shows whether the account has been merged with
        /// another account.</param>
        /// <param name="preferredappointmentdaycode">Select the preferred day
        /// of the week for service appointments.</param>
        /// <param name="_owningteamValue">Unique identifier of the team who
        /// owns the account.</param>
        /// <param name="address2Line3">Type the third line of the secondary
        /// address.</param>
        /// <param name="revenueBase">Shows the annual revenue converted to the
        /// system's default base currency. The calculations use the exchange
        /// rate specified in the Currencies area.</param>
        /// <param name="aging30">For system use only.</param>
        /// <param name="ftpsiteurl">Type the URL for the account's FTP site to
        /// enable users to access data and share documents.</param>
        /// <param name="donotbulkemail">Select whether the account allows bulk
        /// email sent through campaigns. If Do Not Allow is selected, the
        /// account can be added to marketing lists, but is excluded from
        /// email.</param>
        /// <param name="_originatingleadidValue">Shows the lead that the
        /// account was created from if the account was created by converting a
        /// lead in Microsoft Dynamics 365. This is used to relate the account
        /// to data on the originating lead for use in reporting and
        /// analytics.</param>
        /// <param name="emailaddress3">Type an alternate email address for the
        /// account.</param>
        /// <param name="_modifiedbyexternalpartyValue">Shows the external
        /// party who modified the record.</param>
        /// <param name="paymenttermscode">Select the payment terms to indicate
        /// when the customer needs to pay the total amount.</param>
        /// <param name="websiteurl">Type the business profile's website
        /// URL.</param>
        /// <param name="revenue">Type the annual revenue for the account, used
        /// as an indicator in financial performance analysis.</param>
        /// <param name="address1Shippingmethodcode">Select a shipping method
        /// for deliveries sent to this address.</param>
        /// <param name="description">Type additional information to describe
        /// the account, such as an excerpt from the company's website.</param>
        /// <param name="tickersymbol">Type the stock exchange symbol for the
        /// account to track financial performance of the company. You can
        /// click the code entered in this field to access the latest trading
        /// information from MSN Money.</param>
        /// <param name="lastonholdtime">Contains the date and time stamp of
        /// the last on hold time.</param>
        /// <param name="statuscode">Select the account's status.</param>
        /// <param name="marketcap">Type the market capitalization of the
        /// account to identify the company's equity, used as an indicator in
        /// financial performance analysis.</param>
        /// <param name="_parentaccountidValue">Choose the parent account
        /// associated with this account to show parent and child businesses in
        /// reporting and analytics.</param>
        /// <param name="_owninguserValue">Unique identifier of the user who
        /// owns the account.</param>
        /// <param name="address2Addressid">Unique identifier for address
        /// 2.</param>
        /// <param name="_preferredsystemuseridValue">Choose the preferred
        /// service representative for reference when you schedule service
        /// activities for the account.</param>
        /// <param name="address2Longitude">Type the longitude value for the
        /// secondary address for use in mapping and other
        /// applications.</param>
        /// <param name="_defaultpricelevelidValue">Choose the default price
        /// list associated with the account to make sure the correct product
        /// prices for this customer are applied in sales opportunities,
        /// quotes, and orders.</param>
        /// <param name="openrevenueState">State of Open Revenue.</param>
        /// <param name="address1Primarycontactname">Type the name of the main
        /// contact at the account's primary address.</param>
        /// <param name="accountcategorycode">Select a category to indicate
        /// whether the customer account is standard or preferred.</param>
        /// <param name="statecode">Shows whether the account is active or
        /// inactive. Inactive accounts are read-only and can't be edited
        /// unless they are reactivated.</param>
        /// <param name="marketcapBase">Shows the market capitalization
        /// converted to the system's default base currency.</param>
        /// <param name="donotfax">Select whether the account allows faxes. If
        /// Do Not Allow is selected, the account will be excluded from fax
        /// activities distributed in marketing campaigns.</param>
        /// <param name="address2Telephone3">Type a third phone number
        /// associated with the secondary address.</param>
        /// <param name="address2Postofficebox">Type the post office box number
        /// of the secondary address.</param>
        /// <param name="marketingonly">Whether is only for marketing</param>
        /// <param name="_preferredserviceidValue">Choose the account's
        /// preferred service for reference when you schedule service
        /// activities.</param>
        /// <param name="importsequencenumber">Unique identifier of the data
        /// import or data migration that created this record.</param>
        /// <param name="address1Upszone">Type the UPS zone of the primary
        /// address to make sure shipping charges are calculated correctly and
        /// deliveries are made promptly, if shipped by UPS.</param>
        /// <param name="stageid">Shows the ID of the stage.</param>
        /// <param name="utcconversiontimezonecode">Time zone code that was in
        /// use when the record was created.</param>
        /// <param name="donotemail">Select whether the account allows direct
        /// email sent from Microsoft Dynamics 365.</param>
        /// <param name="aging60">For system use only.</param>
        /// <param name="customertypecode">Select the category that best
        /// describes the relationship between the account and your
        /// organization.</param>
        /// <param name="telephone1">Type the main phone number for this
        /// business profile.</param>
        /// <param name="opendealsState">State of Open Deals.</param>
        /// <param name="address1Postofficebox">Type the post office box number
        /// of the primary address.</param>
        /// <param name="_modifiedbyValue">Shows who last updated the
        /// record.</param>
        /// <param name="yominame">Type the phonetic spelling of the company
        /// name, if specified in Japanese, to make sure the name is pronounced
        /// correctly in phone calls and other communications.</param>
        /// <param name="address2Country">Type the country or region for the
        /// secondary address.</param>
        /// <param name="address1Line2">Type the second line of the primary
        /// address.</param>
        /// <param name="donotsendmm">Select whether the account accepts
        /// marketing materials, such as brochures or catalogs.</param>
        /// <param name="address1Postalcode">Type the ZIP Code or postal code
        /// for the primary address.</param>
        /// <param name="traversedpath">For internal use only.</param>
        /// <param name="_transactioncurrencyidValue">Choose the local currency
        /// for the record to make sure budgets are reported in the correct
        /// currency.</param>
        /// <param name="fax">Type the fax number for the account.</param>
        /// <param name="numberofemployees">Type the number of employees that
        /// work at the account for use in marketing segmentation and
        /// demographic analysis.</param>
        /// <param name="opendealsDate">The date time for Open Deals.</param>
        /// <param name="address2Upszone">Type the UPS zone of the secondary
        /// address to make sure shipping charges are calculated correctly and
        /// deliveries are made promptly, if shipped by UPS.</param>
        /// <param name="address2Freighttermscode">Select the freight terms for
        /// the secondary address to make sure shipping orders are processed
        /// correctly.</param>
        /// <param name="accountratingcode">Select a rating to indicate the
        /// value of the customer account.</param>
        /// <param name="aging90">For system use only.</param>
        /// <param name="address1Longitude">Type the longitude value for the
        /// primary address for use in mapping and other applications.</param>
        /// <param name="participatesinworkflow">For system use only. Legacy
        /// Microsoft Dynamics CRM 3.0 workflow data.</param>
        /// <param name="emailaddress2">Type the secondary email address for
        /// the account.</param>
        /// <param name="creditonhold">Select whether the credit for the
        /// account is on hold. This is a useful reference while addressing the
        /// invoice and accounting issues with the customer.</param>
        /// <param name="address1Telephone1">Type the main phone number
        /// associated with the primary address.</param>
        /// <param name="createdon">Shows the date and time when the record was
        /// created. The date and time are displayed in the time zone selected
        /// in Microsoft Dynamics 365 options.</param>
        /// <param name="name">Type the company or business name.</param>
        /// <param name="exchangerate">Shows the conversion rate of the
        /// record's currency. The exchange rate is used to convert all money
        /// fields in the record from the local currency to the system's
        /// default currency.</param>
        /// <param name="address2Addresstypecode">Select the secondary address
        /// type.</param>
        /// <param name="address1Stateorprovince">Type the state or province of
        /// the primary address.</param>
        /// <param name="address2Line2">Type the second line of the secondary
        /// address.</param>
        /// <param name="entityimage">Shows the default image for the
        /// record.</param>
        /// <param name="primarytwitterid">Primary Twitter ID for
        /// Account</param>
        /// <param name="timespentbymeonemailandmeetings">Total time spent for
        /// emails (read and write) and meetings by me in relation to account
        /// record.</param>
        /// <param name="accountnumber">Type an ID number or code for the
        /// account to quickly search and identify the account in system
        /// views.</param>
        /// <param name="address1Line1">Type the first line of the primary
        /// address.</param>
        /// <param name="_territoryidValue">Choose the sales region or
        /// territory for the account to make sure the account is assigned to
        /// the correct representative and for use in segmentation and
        /// analysis.</param>
        /// <param name="accountid">Unique identifier of the account.</param>
        /// <param name="address1Composite">Shows the complete primary
        /// address.</param>
        /// <param name="_slaidValue">Choose the service level agreement (SLA)
        /// that you want to apply to the Account record.</param>
        /// <param name="address2County">Type the county for the secondary
        /// address.</param>
        /// <param name="followemail">Information about whether to allow
        /// following email activity like opens, attachment views and link
        /// clicks for emails sent to the account.</param>
        /// <param name="donotphone">Select whether the account allows phone
        /// calls. If Do Not Allow is selected, the account will be excluded
        /// from phone call activities distributed in marketing
        /// campaigns.</param>
        /// <param name="accountclassificationcode">Select a classification
        /// code to indicate the potential value of the customer account based
        /// on the projected return on investment, cooperation level, sales
        /// cycle length or other criteria.</param>
        /// <param name="_preferredequipmentidValue">Choose the account's
        /// preferred service facility or equipment to make sure services are
        /// scheduled correctly for the customer.</param>
        /// <param name="sic">Type the Standard Industrial Classification (SIC)
        /// code that indicates the account's primary industry of business, for
        /// use in marketing segmentation and demographic analysis.</param>
        /// <param name="processid">Shows the ID of the process.</param>
        /// <param name="address2Telephone2">Type a second phone number
        /// associated with the secondary address.</param>
        /// <param name="address1Addresstypecode">Select the primary address
        /// type.</param>
        /// <param name="address1Utcoffset">Select the time zone, or UTC
        /// offset, for this address so that other people can reference it when
        /// they contact someone at this address.</param>
        /// <param name="address2Fax">Type the fax number associated with the
        /// secondary address.</param>
        /// <param name="businesstypecode">Select the legal designation of the
        /// business profile.</param>
        /// <param name="aging60Base">The base currency equivalent of the aging
        /// 60 field.</param>
        /// <param name="address1Country">Type the country or region for the
        /// primary address.</param>
        /// <param name="_modifiedonbehalfbyValue">Shows who created the record
        /// on behalf of another user.</param>
        /// <param name="address2Shippingmethodcode">Select a shipping method
        /// for deliveries sent to this address.</param>
        /// <param name="stockexchange">Type the stock exchange at which the
        /// account is listed to track their stock and financial performance of
        /// the company.</param>
        /// <param name="_createdbyValue">Shows who created the record.</param>
        /// <param name="address1Line3">Type the third line of the primary
        /// address.</param>
        /// <param name="aging30Base">The base currency equivalent of the aging
        /// 30 field.</param>
        /// <param name="openrevenueBase">Sum of open revenue against an
        /// account and its child accounts.</param>
        /// <param name="sharesoutstanding">Type the number of shares available
        /// to the public for the account. This number is used as an indicator
        /// in financial performance analysis.</param>
        /// <param name="_slainvokedidValue">Last SLA that was applied to this
        /// case. This field is for internal use only.</param>
        /// <param name="address1City">Type the city for the primary
        /// address.</param>
        /// <param name="address2Primarycontactname">Type the name of the main
        /// contact at the account's secondary address.</param>
        /// <param name="address1Latitude">Type the latitude value for the
        /// primary address for use in mapping and other applications.</param>
        /// <param name="modifiedon">Shows the date and time when the record
        /// was last updated. The date and time are displayed in the time zone
        /// selected in Microsoft Dynamics 365 options.</param>
        /// <param name="_masteridValue">Shows the master account that the
        /// account was merged with.</param>
        /// <param name="address2Utcoffset">Select the time zone, or UTC
        /// offset, for this address so that other people can reference it when
        /// they contact someone at this address.</param>
        /// <param name="emailaddress1">Type the primary email address for the
        /// business profile.</param>
        /// <param name="timezoneruleversionnumber">For internal use
        /// only.</param>
        /// <param name="opendeals">Number of open opportunities against an
        /// account and its child accounts.</param>
        /// <param name="address2Stateorprovince">Type the state or province of
        /// the secondary address.</param>
        /// <param name="preferredappointmenttimecode">Select the preferred
        /// time of day for service appointments.</param>
        /// <param name="industrycode">Select the account's primary industry
        /// for use in marketing segmentation and demographic analysis.</param>
        /// <param name="address1Telephone3">Type a third phone number
        /// associated with the primary address.</param>
        public MicrosoftDynamicsCRMaccount(decimal? openrevenue = default(decimal?), int? territorycode = default(int?), System.DateTimeOffset? lastusedincampaign = default(System.DateTimeOffset?), string address1Name = default(string), string address1Telephone2 = default(string), System.DateTimeOffset? overriddencreatedon = default(System.DateTimeOffset?), string bcgovAositelicencenumber = default(string), string entityimageid = default(string), int? ownershipcode = default(int?), int? customersizecode = default(int?), string bcgovBceid = default(string), string _bcgovCurrentbusinessphysicaladdressValue = default(string), System.DateTimeOffset? bcgovRegisteredsellercertificateexpirydate = default(System.DateTimeOffset?), decimal? creditlimit = default(decimal?), string _primarycontactidValue = default(string), string versionnumber = default(string), string address1County = default(string), long? entityimageTimestamp = default(long?), string telephone3 = default(string), System.DateTimeOffset? openrevenueDate = default(System.DateTimeOffset?), bool? bcgovWaiveradministrativehold = default(bool?), bool? donotbulkpostalmail = default(bool?), int? address1Freighttermscode = default(int?), string address2Line1 = default(string), int? onholdtime = default(int?), bool? donotpostalmail = default(bool?), string _createdbyexternalpartyValue = default(string), string telephone2 = default(string), string _owningbusinessunitValue = default(string), string primarysatoriid = default(string), int? shippingmethodcode = default(int?), string address1Addressid = default(string), bool? bcgovMailaddressdiffromphysaddress = default(bool?), string address2Telephone1 = default(string), string address1Fax = default(string), bool? bcgovDeclarationofcorrectinformation = default(bool?), string _owneridValue = default(string), string _createdonbehalfbyValue = default(string), int? preferredcontactmethodcode = default(int?), string address2City = default(string), decimal? address2Latitude = default(decimal?), string address2Composite = default(string), decimal? creditlimitBase = default(decimal?), string bcgovClientid = default(string), decimal? aging90Base = default(decimal?), string address2Postalcode = default(string), string address2Name = default(string), bool? merged = default(bool?), int? preferredappointmentdaycode = default(int?), string _owningteamValue = default(string), string address2Line3 = default(string), decimal? revenueBase = default(decimal?), string bcgovAodelbusinessname = default(string), decimal? aging30 = default(decimal?), string ftpsiteurl = default(string), bool? donotbulkemail = default(bool?), string _originatingleadidValue = default(string), string emailaddress3 = default(string), string _modifiedbyexternalpartyValue = default(string), int? paymenttermscode = default(int?), string websiteurl = default(string), decimal? revenue = default(decimal?), int? address1Shippingmethodcode = default(int?), System.DateTimeOffset? bcgovAositelicenceexpirydate = default(System.DateTimeOffset?), string description = default(string), string bcgovAositelicencebusinessname = default(string), int? bcgovRegisteredsellerstatus = default(int?), string tickersymbol = default(string), bool? bcgovAolicenceexpirynotificationsent = default(bool?), System.DateTimeOffset? lastonholdtime = default(System.DateTimeOffset?), string bcgovAootherlicencebusinessname = default(string), int? statuscode = default(int?), System.DateTimeOffset? bcgovWaivercertificateexpirydate = default(System.DateTimeOffset?), System.DateTimeOffset? bcgovLegislativeauthoritystatusdate = default(System.DateTimeOffset?), decimal? marketcap = default(decimal?), string _parentaccountidValue = default(string), string _owninguserValue = default(string), System.DateTimeOffset? bcgovSubmitteddate = default(System.DateTimeOffset?), string _bcgovAdditionalcontactValue = default(string), string address2Addressid = default(string), string _preferredsystemuseridValue = default(string), decimal? address2Longitude = default(decimal?), string _defaultpricelevelidValue = default(string), int? openrevenueState = default(int?), string address1Primarycontactname = default(string), bool? bcgovFoippaconsent = default(bool?), int? accountcategorycode = default(int?), int? statecode = default(int?), decimal? marketcapBase = default(decimal?), bool? donotfax = default(bool?), System.DateTimeOffset? bcgovLegislativeauthoritystatusnotificationdat = default(System.DateTimeOffset?), string address2Telephone3 = default(string), string address2Postofficebox = default(string), bool? marketingonly = default(bool?), string _preferredserviceidValue = default(string), bool? bcgovRegisteredselleradministrativehold = default(bool?), int? importsequencenumber = default(int?), string address1Upszone = default(string), string stageid = default(string), int? utcconversiontimezonecode = default(int?), bool? donotemail = default(bool?), decimal? aging60 = default(decimal?), string _bcgovCurrentbusinessmailingaddressValue = default(string), int? customertypecode = default(int?), string telephone1 = default(string), int? opendealsState = default(int?), string address1Postofficebox = default(string), string bcgovDoingbusinessasname = default(string), bool? bcgovAoadministrativehold = default(bool?), string _modifiedbyValue = default(string), int? bcgovBusinesstype = default(int?), string yominame = default(string), string bcgovBusinessnumber = default(string), string address2Country = default(string), bool? bcgovBusinessprofileupdate = default(bool?), string address1Line2 = default(string), bool? donotsendmm = default(bool?), string address1Postalcode = default(string), string traversedpath = default(string), string _transactioncurrencyidValue = default(string), string fax = default(string), int? numberofemployees = default(int?), System.DateTimeOffset? opendealsDate = default(System.DateTimeOffset?), string address2Upszone = default(string), int? address2Freighttermscode = default(int?), int? accountratingcode = default(int?), decimal? aging90 = default(decimal?), string _bcgovCurrentregisteredsellercertificateValue = default(string), decimal? address1Longitude = default(decimal?), bool? bcgovConsentforemailcommunication = default(bool?), bool? participatesinworkflow = default(bool?), string _bcgovCurrentwaivercertificateValue = default(string), int? bcgovWaiverstatus = default(int?), string emailaddress2 = default(string), string bcgovAootherlicencenumber = default(string), bool? creditonhold = default(bool?), string address1Telephone1 = default(string), System.DateTimeOffset? createdon = default(System.DateTimeOffset?), string name = default(string), decimal? exchangerate = default(decimal?), int? address2Addresstypecode = default(int?), string address1Stateorprovince = default(string), string address2Line2 = default(string), byte[] entityimage = default(byte[]), System.DateTimeOffset? bcgovAodelexpirydate = default(System.DateTimeOffset?), string primarytwitterid = default(string), string timespentbymeonemailandmeetings = default(string), string accountnumber = default(string), string address1Line1 = default(string), string _territoryidValue = default(string), string accountid = default(string), string address1Composite = default(string), string _slaidValue = default(string), string address2County = default(string), bool? followemail = default(bool?), bool? donotphone = default(bool?), int? accountclassificationcode = default(int?), string _preferredequipmentidValue = default(string), int? bcgovLegislativeauthoritylicensestatus = default(int?), string sic = default(string), string entityimageUrl = default(string), string processid = default(string), string address2Telephone2 = default(string), int? address1Addresstypecode = default(int?), int? address1Utcoffset = default(int?), string address2Fax = default(string), System.DateTimeOffset? bcgovAootherlicenceexpirydate = default(System.DateTimeOffset?), int? businesstypecode = default(int?), decimal? aging60Base = default(decimal?), string address1Country = default(string), string _modifiedonbehalfbyValue = default(string), int? address2Shippingmethodcode = default(int?), string stockexchange = default(string), string _createdbyValue = default(string), string address1Line3 = default(string), decimal? aging30Base = default(decimal?), decimal? openrevenueBase = default(decimal?), int? sharesoutstanding = default(int?), string _slainvokedidValue = default(string), string address1City = default(string), string address2Primarycontactname = default(string), string bcgovAodelnumber = default(string), decimal? address1Latitude = default(decimal?), System.DateTimeOffset? modifiedon = default(System.DateTimeOffset?), string _masteridValue = default(string), int? address2Utcoffset = default(int?), string emailaddress1 = default(string), int? timezoneruleversionnumber = default(int?), int? opendeals = default(int?), string address2Stateorprovince = default(string), int? preferredappointmenttimecode = default(int?), int? industrycode = default(int?), string address1Telephone3 = default(string), IList<MicrosoftDynamicsCRMlead> accountleadsAssociation = default(IList<MicrosoftDynamicsCRMlead>), IList<MicrosoftDynamicsCRMlist> listaccountAssociation = default(IList<MicrosoftDynamicsCRMlist>), IList<MicrosoftDynamicsCRMentitlement> accountEntitlementCustomer = default(IList<MicrosoftDynamicsCRMentitlement>), IList<MicrosoftDynamicsCRMentitlement> accountEntitlementAccount = default(IList<MicrosoftDynamicsCRMentitlement>), IList<MicrosoftDynamicsCRMbookableresource> accountBookableresourceAccountId = default(IList<MicrosoftDynamicsCRMbookableresource>), MicrosoftDynamicsCRMprincipal ownerid = default(MicrosoftDynamicsCRMprincipal), IList<MicrosoftDynamicsCRMactivitypointer> accountActivityPointers = default(IList<MicrosoftDynamicsCRMactivitypointer>), IList<MicrosoftDynamicsCRMserviceappointment> accountServiceAppointments = default(IList<MicrosoftDynamicsCRMserviceappointment>), IList<MicrosoftDynamicsCRMsyncerror> accountSyncErrors = default(IList<MicrosoftDynamicsCRMsyncerror>), MicrosoftDynamicsCRMsystemuser createdby = default(MicrosoftDynamicsCRMsystemuser), IList<MicrosoftDynamicsCRMlead> leadCustomerAccounts = default(IList<MicrosoftDynamicsCRMlead>), IList<MicrosoftDynamicsCRMemail> accountEmailSendersAccount = default(IList<MicrosoftDynamicsCRMemail>), IList<MicrosoftDynamicsCRMemail> accountEmailEmailSender = default(IList<MicrosoftDynamicsCRMemail>), IList<MicrosoftDynamicsCRMcontract> contractBillingcustomerAccounts = default(IList<MicrosoftDynamicsCRMcontract>), IList<MicrosoftDynamicsCRMannotation> accountAnnotation = default(IList<MicrosoftDynamicsCRMannotation>), IList<MicrosoftDynamicsCRMsharepointdocumentlocation> accountSharepointDocumentLocation = default(IList<MicrosoftDynamicsCRMsharepointdocumentlocation>), MicrosoftDynamicsCRMservice preferredserviceid = default(MicrosoftDynamicsCRMservice), MicrosoftDynamicsCRMsla slaAccountSla = default(MicrosoftDynamicsCRMsla), IList<MicrosoftDynamicsCRMconnection> accountConnections2 = default(IList<MicrosoftDynamicsCRMconnection>), MicrosoftDynamicsCRMsystemuser modifiedby = default(MicrosoftDynamicsCRMsystemuser), IList<MicrosoftDynamicsCRMpostfollow> accountPostFollows = default(IList<MicrosoftDynamicsCRMpostfollow>), IList<MicrosoftDynamicsCRMpostregarding> accountPostRegardings = default(IList<MicrosoftDynamicsCRMpostregarding>), IList<MicrosoftDynamicsCRMfax> accountFaxes = default(IList<MicrosoftDynamicsCRMfax>), MicrosoftDynamicsCRMaccount masterid = default(MicrosoftDynamicsCRMaccount), IList<MicrosoftDynamicsCRMaccount> accountMasterAccount = default(IList<MicrosoftDynamicsCRMaccount>), MicrosoftDynamicsCRMequipment preferredequipmentid = default(MicrosoftDynamicsCRMequipment), MicrosoftDynamicsCRMbusinessunit owningbusinessunit = default(MicrosoftDynamicsCRMbusinessunit), IList<MicrosoftDynamicsCRMasyncoperation> accountAsyncOperations = default(IList<MicrosoftDynamicsCRMasyncoperation>), MicrosoftDynamicsCRMtransactioncurrency transactioncurrencyid = default(MicrosoftDynamicsCRMtransactioncurrency), IList<MicrosoftDynamicsCRMduplicaterecord> accountDuplicateBaseRecord = default(IList<MicrosoftDynamicsCRMduplicaterecord>), MicrosoftDynamicsCRMsystemuser preferredsystemuserid = default(MicrosoftDynamicsCRMsystemuser), IList<MicrosoftDynamicsCRMbulkoperationlog> createdAccountBulkOperationLogs2 = default(IList<MicrosoftDynamicsCRMbulkoperationlog>), MicrosoftDynamicsCRMsystemuser createdonbehalfby = default(MicrosoftDynamicsCRMsystemuser), IList<MicrosoftDynamicsCRMrecurringappointmentmaster> accountRecurringAppointmentMasters = default(IList<MicrosoftDynamicsCRMrecurringappointmentmaster>), IList<MicrosoftDynamicsCRMphonecall> accountPhonecalls = default(IList<MicrosoftDynamicsCRMphonecall>), MicrosoftDynamicsCRMcontact primarycontactid = default(MicrosoftDynamicsCRMcontact), IList<MicrosoftDynamicsCRMsocialactivity> accountSocialActivities = default(IList<MicrosoftDynamicsCRMsocialactivity>), IList<MicrosoftDynamicsCRMsocialactivity> socialActivityPostAuthorAccountAccounts = default(IList<MicrosoftDynamicsCRMsocialactivity>), IList<MicrosoftDynamicsCRMopportunity> opportunityCustomerAccounts = default(IList<MicrosoftDynamicsCRMopportunity>), IList<MicrosoftDynamicsCRMbulkoperationlog> sourceAccountBulkOperationLogs = default(IList<MicrosoftDynamicsCRMbulkoperationlog>), IList<MicrosoftDynamicsCRMcustomeraddress> accountCustomerAddress = default(IList<MicrosoftDynamicsCRMcustomeraddress>), IList<MicrosoftDynamicsCRMslakpiinstance> slakpiinstanceAccount = default(IList<MicrosoftDynamicsCRMslakpiinstance>), MicrosoftDynamicsCRMlead originatingleadid = default(MicrosoftDynamicsCRMlead), IList<MicrosoftDynamicsCRMtask> accountTasks = default(IList<MicrosoftDynamicsCRMtask>), IList<MicrosoftDynamicsCRMopportunity> opportunityParentAccount = default(IList<MicrosoftDynamicsCRMopportunity>), MicrosoftDynamicsCRMsla slainvokedidAccountSla = default(MicrosoftDynamicsCRMsla), IList<MicrosoftDynamicsCRMbulkdeletefailure> accountBulkDeleteFailures = default(IList<MicrosoftDynamicsCRMbulkdeletefailure>), IList<MicrosoftDynamicsCRMquote> quoteCustomerAccounts = default(IList<MicrosoftDynamicsCRMquote>), IList<MicrosoftDynamicsCRMsocialactivity> socialActivityPostAuthorAccounts = default(IList<MicrosoftDynamicsCRMsocialactivity>), MicrosoftDynamicsCRMterritory territoryid = default(MicrosoftDynamicsCRMterritory), IList<MicrosoftDynamicsCRMcontact> contactCustomerAccounts = default(IList<MicrosoftDynamicsCRMcontact>), IList<MicrosoftDynamicsCRMincident> incidentCustomerAccounts = default(IList<MicrosoftDynamicsCRMincident>), IList<MicrosoftDynamicsCRMinvoice> invoiceCustomerAccounts = default(IList<MicrosoftDynamicsCRMinvoice>), IList<MicrosoftDynamicsCRMappointment> accountAppointments = default(IList<MicrosoftDynamicsCRMappointment>), IList<MicrosoftDynamicsCRMcontractdetail> contractlineitemCustomerAccounts = default(IList<MicrosoftDynamicsCRMcontractdetail>), IList<MicrosoftDynamicsCRMemail> accountEmails = default(IList<MicrosoftDynamicsCRMemail>), MicrosoftDynamicsCRMaccount parentaccountid = default(MicrosoftDynamicsCRMaccount), IList<MicrosoftDynamicsCRMaccount> accountParentAccount = default(IList<MicrosoftDynamicsCRMaccount>), IList<MicrosoftDynamicsCRMsocialprofile> socialprofileCustomerAccounts = default(IList<MicrosoftDynamicsCRMsocialprofile>), IList<MicrosoftDynamicsCRMduplicaterecord> accountDuplicateMatchingRecord = default(IList<MicrosoftDynamicsCRMduplicaterecord>), IList<MicrosoftDynamicsCRMactivityparty> accountActivityParties = default(IList<MicrosoftDynamicsCRMactivityparty>), IList<MicrosoftDynamicsCRMconnection> accountConnections1 = default(IList<MicrosoftDynamicsCRMconnection>), MicrosoftDynamicsCRMteam owningteam = default(MicrosoftDynamicsCRMteam), MicrosoftDynamicsCRMpricelevel defaultpricelevelid = default(MicrosoftDynamicsCRMpricelevel), IList<MicrosoftDynamicsCRMlead> leadParentAccount = default(IList<MicrosoftDynamicsCRMlead>), IList<MicrosoftDynamicsCRMcontract> contractCustomerAccounts = default(IList<MicrosoftDynamicsCRMcontract>), IList<MicrosoftDynamicsCRMactioncard> accountActioncard = default(IList<MicrosoftDynamicsCRMactioncard>), MicrosoftDynamicsCRMsystemuser owninguser = default(MicrosoftDynamicsCRMsystemuser), IList<MicrosoftDynamicsCRMletter> accountLetters = default(IList<MicrosoftDynamicsCRMletter>), MicrosoftDynamicsCRMprocessstage stageidProcessstage = default(MicrosoftDynamicsCRMprocessstage), IList<MicrosoftDynamicsCRMsalesorder> orderCustomerAccounts = default(IList<MicrosoftDynamicsCRMsalesorder>), MicrosoftDynamicsCRMsystemuser modifiedonbehalfby = default(MicrosoftDynamicsCRMsystemuser), IList<MicrosoftDynamicsCRMabsScheduledprocessexecution> accountAbsScheduledprocessexecutions = default(IList<MicrosoftDynamicsCRMabsScheduledprocessexecution>), IList<MicrosoftDynamicsCRMknowledgebaserecord> accountKnowledgebaserecord = default(IList<MicrosoftDynamicsCRMknowledgebaserecord>), IList<MicrosoftDynamicsCRMknowledgearticle> msdynAccountKnowledgearticle = default(IList<MicrosoftDynamicsCRMknowledgearticle>), IList<MicrosoftDynamicsCRMqueueitem> accountQueueItems = default(IList<MicrosoftDynamicsCRMqueueitem>), IList<MicrosoftDynamicsCRMbcgovBusinesscontact> bcgovAccountBcgovBusinesscontactBusinessProfile = default(IList<MicrosoftDynamicsCRMbcgovBusinesscontact>), IList<MicrosoftDynamicsCRMbcgovCertificate> bcgovAccountBcgovCertificateCertificateHolderBusiness = default(IList<MicrosoftDynamicsCRMbcgovCertificate>), IList<MicrosoftDynamicsCRMcontact> bcgovAccountContactBusinessLegalName = default(IList<MicrosoftDynamicsCRMcontact>), IList<MicrosoftDynamicsCRMbcgovCustomaddress> bcgovAccountCustomaddress = default(IList<MicrosoftDynamicsCRMbcgovCustomaddress>), IList<MicrosoftDynamicsCRMbcgovCustomaddress> bcgovAccountCustomaddressBusinessProfile = default(IList<MicrosoftDynamicsCRMbcgovCustomaddress>), IList<MicrosoftDynamicsCRMbcgovEquipment> bcgovAccountEquipmentCurrentBusinessOwner = default(IList<MicrosoftDynamicsCRMbcgovEquipment>), IList<MicrosoftDynamicsCRMbcgovLocation> bcgovAccountLocationBusinessProfile = default(IList<MicrosoftDynamicsCRMbcgovLocation>), MicrosoftDynamicsCRMbcgovCustomaddress bcgovCurrentBusinessMailingAddress = default(MicrosoftDynamicsCRMbcgovCustomaddress), MicrosoftDynamicsCRMbcgovCustomaddress bcgovCurrentBusinessPhysicalAddress = default(MicrosoftDynamicsCRMbcgovCustomaddress), MicrosoftDynamicsCRMcontact bcgovAdditionalContact = default(MicrosoftDynamicsCRMcontact), IList<MicrosoftDynamicsCRMbcgovInspection> bcgovAccountInspectionBusinessLegalName = default(IList<MicrosoftDynamicsCRMbcgovInspection>), MicrosoftDynamicsCRMbcgovCertificate bcgovCurrentWaiverCertificate = default(MicrosoftDynamicsCRMbcgovCertificate), MicrosoftDynamicsCRMbcgovCertificate bcgovCurrentRegisteredSellerCertificate = default(MicrosoftDynamicsCRMbcgovCertificate), IList<MicrosoftDynamicsCRMbcgovInspection> bcgovAccountInspectionOwnerCategory = default(IList<MicrosoftDynamicsCRMbcgovInspection>), IList<MicrosoftDynamicsCRMbcgovComplaint> bcgovAccountBcgovComplaintBusinessLegalName = default(IList<MicrosoftDynamicsCRMbcgovComplaint>))
        {
            Openrevenue = openrevenue;
            Territorycode = territorycode;
            Lastusedincampaign = lastusedincampaign;
            Address1Name = address1Name;
            Address1Telephone2 = address1Telephone2;
            Overriddencreatedon = overriddencreatedon;
            BcgovAositelicencenumber = bcgovAositelicencenumber;
            Entityimageid = entityimageid;
            Ownershipcode = ownershipcode;
            Customersizecode = customersizecode;
            BcgovBceid = bcgovBceid;
            this._bcgovCurrentbusinessphysicaladdressValue = _bcgovCurrentbusinessphysicaladdressValue;
            BcgovRegisteredsellercertificateexpirydate = bcgovRegisteredsellercertificateexpirydate;
            Creditlimit = creditlimit;
            this._primarycontactidValue = _primarycontactidValue;
            Versionnumber = versionnumber;
            Address1County = address1County;
            EntityimageTimestamp = entityimageTimestamp;
            Telephone3 = telephone3;
            OpenrevenueDate = openrevenueDate;
            BcgovWaiveradministrativehold = bcgovWaiveradministrativehold;
            Donotbulkpostalmail = donotbulkpostalmail;
            Address1Freighttermscode = address1Freighttermscode;
            Address2Line1 = address2Line1;
            Onholdtime = onholdtime;
            Donotpostalmail = donotpostalmail;
            this._createdbyexternalpartyValue = _createdbyexternalpartyValue;
            Telephone2 = telephone2;
            this._owningbusinessunitValue = _owningbusinessunitValue;
            Primarysatoriid = primarysatoriid;
            Shippingmethodcode = shippingmethodcode;
            Address1Addressid = address1Addressid;
            BcgovMailaddressdiffromphysaddress = bcgovMailaddressdiffromphysaddress;
            Address2Telephone1 = address2Telephone1;
            Address1Fax = address1Fax;
            BcgovDeclarationofcorrectinformation = bcgovDeclarationofcorrectinformation;
            this._owneridValue = _owneridValue;
            this._createdonbehalfbyValue = _createdonbehalfbyValue;
            Preferredcontactmethodcode = preferredcontactmethodcode;
            Address2City = address2City;
            Address2Latitude = address2Latitude;
            Address2Composite = address2Composite;
            CreditlimitBase = creditlimitBase;
            BcgovClientid = bcgovClientid;
            Aging90Base = aging90Base;
            Address2Postalcode = address2Postalcode;
            Address2Name = address2Name;
            Merged = merged;
            Preferredappointmentdaycode = preferredappointmentdaycode;
            this._owningteamValue = _owningteamValue;
            Address2Line3 = address2Line3;
            RevenueBase = revenueBase;
            BcgovAodelbusinessname = bcgovAodelbusinessname;
            Aging30 = aging30;
            Ftpsiteurl = ftpsiteurl;
            Donotbulkemail = donotbulkemail;
            this._originatingleadidValue = _originatingleadidValue;
            Emailaddress3 = emailaddress3;
            this._modifiedbyexternalpartyValue = _modifiedbyexternalpartyValue;
            Paymenttermscode = paymenttermscode;
            Websiteurl = websiteurl;
            Revenue = revenue;
            Address1Shippingmethodcode = address1Shippingmethodcode;
            BcgovAositelicenceexpirydate = bcgovAositelicenceexpirydate;
            Description = description;
            BcgovAositelicencebusinessname = bcgovAositelicencebusinessname;
            BcgovRegisteredsellerstatus = bcgovRegisteredsellerstatus;
            Tickersymbol = tickersymbol;
            BcgovAolicenceexpirynotificationsent = bcgovAolicenceexpirynotificationsent;
            Lastonholdtime = lastonholdtime;
            BcgovAootherlicencebusinessname = bcgovAootherlicencebusinessname;
            Statuscode = statuscode;
            BcgovWaivercertificateexpirydate = bcgovWaivercertificateexpirydate;
            BcgovLegislativeauthoritystatusdate = bcgovLegislativeauthoritystatusdate;
            Marketcap = marketcap;
            this._parentaccountidValue = _parentaccountidValue;
            this._owninguserValue = _owninguserValue;
            BcgovSubmitteddate = bcgovSubmitteddate;
            this._bcgovAdditionalcontactValue = _bcgovAdditionalcontactValue;
            Address2Addressid = address2Addressid;
            this._preferredsystemuseridValue = _preferredsystemuseridValue;
            Address2Longitude = address2Longitude;
            this._defaultpricelevelidValue = _defaultpricelevelidValue;
            OpenrevenueState = openrevenueState;
            Address1Primarycontactname = address1Primarycontactname;
            BcgovFoippaconsent = bcgovFoippaconsent;
            Accountcategorycode = accountcategorycode;
            Statecode = statecode;
            MarketcapBase = marketcapBase;
            Donotfax = donotfax;
            BcgovLegislativeauthoritystatusnotificationdat = bcgovLegislativeauthoritystatusnotificationdat;
            Address2Telephone3 = address2Telephone3;
            Address2Postofficebox = address2Postofficebox;
            Marketingonly = marketingonly;
            this._preferredserviceidValue = _preferredserviceidValue;
            BcgovRegisteredselleradministrativehold = bcgovRegisteredselleradministrativehold;
            Importsequencenumber = importsequencenumber;
            Address1Upszone = address1Upszone;
            Stageid = stageid;
            Utcconversiontimezonecode = utcconversiontimezonecode;
            Donotemail = donotemail;
            Aging60 = aging60;
            this._bcgovCurrentbusinessmailingaddressValue = _bcgovCurrentbusinessmailingaddressValue;
            Customertypecode = customertypecode;
            Telephone1 = telephone1;
            OpendealsState = opendealsState;
            Address1Postofficebox = address1Postofficebox;
            BcgovDoingbusinessasname = bcgovDoingbusinessasname;
            BcgovAoadministrativehold = bcgovAoadministrativehold;
            this._modifiedbyValue = _modifiedbyValue;
            BcgovBusinesstype = bcgovBusinesstype;
            Yominame = yominame;
            BcgovBusinessnumber = bcgovBusinessnumber;
            Address2Country = address2Country;
            BcgovBusinessprofileupdate = bcgovBusinessprofileupdate;
            Address1Line2 = address1Line2;
            Donotsendmm = donotsendmm;
            Address1Postalcode = address1Postalcode;
            Traversedpath = traversedpath;
            this._transactioncurrencyidValue = _transactioncurrencyidValue;
            Fax = fax;
            Numberofemployees = numberofemployees;
            OpendealsDate = opendealsDate;
            Address2Upszone = address2Upszone;
            Address2Freighttermscode = address2Freighttermscode;
            Accountratingcode = accountratingcode;
            Aging90 = aging90;
            this._bcgovCurrentregisteredsellercertificateValue = _bcgovCurrentregisteredsellercertificateValue;
            Address1Longitude = address1Longitude;
            BcgovConsentforemailcommunication = bcgovConsentforemailcommunication;
            Participatesinworkflow = participatesinworkflow;
            this._bcgovCurrentwaivercertificateValue = _bcgovCurrentwaivercertificateValue;
            BcgovWaiverstatus = bcgovWaiverstatus;
            Emailaddress2 = emailaddress2;
            BcgovAootherlicencenumber = bcgovAootherlicencenumber;
            Creditonhold = creditonhold;
            Address1Telephone1 = address1Telephone1;
            Createdon = createdon;
            Name = name;
            Exchangerate = exchangerate;
            Address2Addresstypecode = address2Addresstypecode;
            Address1Stateorprovince = address1Stateorprovince;
            Address2Line2 = address2Line2;
            Entityimage = entityimage;
            BcgovAodelexpirydate = bcgovAodelexpirydate;
            Primarytwitterid = primarytwitterid;
            Timespentbymeonemailandmeetings = timespentbymeonemailandmeetings;
            Accountnumber = accountnumber;
            Address1Line1 = address1Line1;
            this._territoryidValue = _territoryidValue;
            Accountid = accountid;
            Address1Composite = address1Composite;
            this._slaidValue = _slaidValue;
            Address2County = address2County;
            Followemail = followemail;
            Donotphone = donotphone;
            Accountclassificationcode = accountclassificationcode;
            this._preferredequipmentidValue = _preferredequipmentidValue;
            BcgovLegislativeauthoritylicensestatus = bcgovLegislativeauthoritylicensestatus;
            Sic = sic;
            EntityimageUrl = entityimageUrl;
            Processid = processid;
            Address2Telephone2 = address2Telephone2;
            Address1Addresstypecode = address1Addresstypecode;
            Address1Utcoffset = address1Utcoffset;
            Address2Fax = address2Fax;
            BcgovAootherlicenceexpirydate = bcgovAootherlicenceexpirydate;
            Businesstypecode = businesstypecode;
            Aging60Base = aging60Base;
            Address1Country = address1Country;
            this._modifiedonbehalfbyValue = _modifiedonbehalfbyValue;
            Address2Shippingmethodcode = address2Shippingmethodcode;
            Stockexchange = stockexchange;
            this._createdbyValue = _createdbyValue;
            Address1Line3 = address1Line3;
            Aging30Base = aging30Base;
            OpenrevenueBase = openrevenueBase;
            Sharesoutstanding = sharesoutstanding;
            this._slainvokedidValue = _slainvokedidValue;
            Address1City = address1City;
            Address2Primarycontactname = address2Primarycontactname;
            BcgovAodelnumber = bcgovAodelnumber;
            Address1Latitude = address1Latitude;
            Modifiedon = modifiedon;
            this._masteridValue = _masteridValue;
            Address2Utcoffset = address2Utcoffset;
            Emailaddress1 = emailaddress1;
            Timezoneruleversionnumber = timezoneruleversionnumber;
            Opendeals = opendeals;
            Address2Stateorprovince = address2Stateorprovince;
            Preferredappointmenttimecode = preferredappointmenttimecode;
            Industrycode = industrycode;
            Address1Telephone3 = address1Telephone3;
            AccountleadsAssociation = accountleadsAssociation;
            ListaccountAssociation = listaccountAssociation;
            AccountEntitlementCustomer = accountEntitlementCustomer;
            AccountEntitlementAccount = accountEntitlementAccount;
            AccountBookableresourceAccountId = accountBookableresourceAccountId;
            Ownerid = ownerid;
            AccountActivityPointers = accountActivityPointers;
            AccountServiceAppointments = accountServiceAppointments;
            AccountSyncErrors = accountSyncErrors;
            Createdby = createdby;
            LeadCustomerAccounts = leadCustomerAccounts;
            AccountEmailSendersAccount = accountEmailSendersAccount;
            AccountEmailEmailSender = accountEmailEmailSender;
            ContractBillingcustomerAccounts = contractBillingcustomerAccounts;
            AccountAnnotation = accountAnnotation;
            AccountSharepointDocumentLocation = accountSharepointDocumentLocation;
            Preferredserviceid = preferredserviceid;
            SlaAccountSla = slaAccountSla;
            AccountConnections2 = accountConnections2;
            Modifiedby = modifiedby;
            AccountPostFollows = accountPostFollows;
            AccountPostRegardings = accountPostRegardings;
            AccountFaxes = accountFaxes;
            Masterid = masterid;
            AccountMasterAccount = accountMasterAccount;
            Preferredequipmentid = preferredequipmentid;
            Owningbusinessunit = owningbusinessunit;
            AccountAsyncOperations = accountAsyncOperations;
            Transactioncurrencyid = transactioncurrencyid;
            AccountDuplicateBaseRecord = accountDuplicateBaseRecord;
            Preferredsystemuserid = preferredsystemuserid;
            CreatedAccountBulkOperationLogs2 = createdAccountBulkOperationLogs2;
            Createdonbehalfby = createdonbehalfby;
            AccountRecurringAppointmentMasters = accountRecurringAppointmentMasters;
            AccountPhonecalls = accountPhonecalls;
            Primarycontactid = primarycontactid;
            AccountSocialActivities = accountSocialActivities;
            SocialActivityPostAuthorAccountAccounts = socialActivityPostAuthorAccountAccounts;
            OpportunityCustomerAccounts = opportunityCustomerAccounts;
            SourceAccountBulkOperationLogs = sourceAccountBulkOperationLogs;
            AccountCustomerAddress = accountCustomerAddress;
            SlakpiinstanceAccount = slakpiinstanceAccount;
            Originatingleadid = originatingleadid;
            AccountTasks = accountTasks;
            OpportunityParentAccount = opportunityParentAccount;
            SlainvokedidAccountSla = slainvokedidAccountSla;
            AccountBulkDeleteFailures = accountBulkDeleteFailures;
            QuoteCustomerAccounts = quoteCustomerAccounts;
            SocialActivityPostAuthorAccounts = socialActivityPostAuthorAccounts;
            Territoryid = territoryid;
            ContactCustomerAccounts = contactCustomerAccounts;
            IncidentCustomerAccounts = incidentCustomerAccounts;
            InvoiceCustomerAccounts = invoiceCustomerAccounts;
            AccountAppointments = accountAppointments;
            ContractlineitemCustomerAccounts = contractlineitemCustomerAccounts;
            AccountEmails = accountEmails;
            Parentaccountid = parentaccountid;
            AccountParentAccount = accountParentAccount;
            SocialprofileCustomerAccounts = socialprofileCustomerAccounts;
            AccountDuplicateMatchingRecord = accountDuplicateMatchingRecord;
            AccountActivityParties = accountActivityParties;
            AccountConnections1 = accountConnections1;
            Owningteam = owningteam;
            Defaultpricelevelid = defaultpricelevelid;
            LeadParentAccount = leadParentAccount;
            ContractCustomerAccounts = contractCustomerAccounts;
            AccountActioncard = accountActioncard;
            Owninguser = owninguser;
            AccountLetters = accountLetters;
            StageidProcessstage = stageidProcessstage;
            OrderCustomerAccounts = orderCustomerAccounts;
            Modifiedonbehalfby = modifiedonbehalfby;
            AccountAbsScheduledprocessexecutions = accountAbsScheduledprocessexecutions;
            AccountKnowledgebaserecord = accountKnowledgebaserecord;
            MsdynAccountKnowledgearticle = msdynAccountKnowledgearticle;
            AccountQueueItems = accountQueueItems;
            BcgovAccountBcgovBusinesscontactBusinessProfile = bcgovAccountBcgovBusinesscontactBusinessProfile;
            BcgovAccountBcgovCertificateCertificateHolderBusiness = bcgovAccountBcgovCertificateCertificateHolderBusiness;
            BcgovAccountContactBusinessLegalName = bcgovAccountContactBusinessLegalName;
            BcgovAccountCustomaddress = bcgovAccountCustomaddress;
            BcgovAccountCustomaddressBusinessProfile = bcgovAccountCustomaddressBusinessProfile;
            BcgovAccountEquipmentCurrentBusinessOwner = bcgovAccountEquipmentCurrentBusinessOwner;
            BcgovAccountLocationBusinessProfile = bcgovAccountLocationBusinessProfile;
            BcgovCurrentBusinessMailingAddress = bcgovCurrentBusinessMailingAddress;
            BcgovCurrentBusinessPhysicalAddress = bcgovCurrentBusinessPhysicalAddress;
            BcgovAdditionalContact = bcgovAdditionalContact;
            BcgovAccountInspectionBusinessLegalName = bcgovAccountInspectionBusinessLegalName;
            BcgovCurrentWaiverCertificate = bcgovCurrentWaiverCertificate;
            BcgovCurrentRegisteredSellerCertificate = bcgovCurrentRegisteredSellerCertificate;
            BcgovAccountInspectionOwnerCategory = bcgovAccountInspectionOwnerCategory;
            BcgovAccountBcgovComplaintBusinessLegalName = bcgovAccountBcgovComplaintBusinessLegalName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets sum of open revenue against an account and its child
        /// accounts.
        /// </summary>
        [JsonProperty(PropertyName = "openrevenue")]
        public decimal? Openrevenue { get; set; }

        /// <summary>
        /// Gets or sets select a region or territory for the account for use
        /// in segmentation and analysis.
        /// </summary>
        [JsonProperty(PropertyName = "territorycode")]
        public int? Territorycode { get; set; }

        /// <summary>
        /// Gets or sets shows the date when the account was last included in a
        /// marketing campaign or quick campaign.
        /// </summary>
        [JsonProperty(PropertyName = "lastusedincampaign")]
        public System.DateTimeOffset? Lastusedincampaign { get; set; }

        /// <summary>
        /// Gets or sets type a descriptive name for the primary address, such
        /// as Corporate Headquarters.
        /// </summary>
        [JsonProperty(PropertyName = "address1_name")]
        public string Address1Name { get; set; }

        /// <summary>
        /// Gets or sets type a second phone number associated with the primary
        /// address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_telephone2")]
        public string Address1Telephone2 { get; set; }

        /// <summary>
        /// Gets or sets date and time that the record was migrated.
        /// </summary>
        [JsonProperty(PropertyName = "overriddencreatedon")]
        public System.DateTimeOffset? Overriddencreatedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_aositelicencenumber")]
        public string BcgovAositelicencenumber { get; set; }

        /// <summary>
        /// Gets or sets for internal use only.
        /// </summary>
        [JsonProperty(PropertyName = "entityimageid")]
        public string Entityimageid { get; set; }

        /// <summary>
        /// Gets or sets select the account's ownership structure, such as
        /// public or private.
        /// </summary>
        [JsonProperty(PropertyName = "ownershipcode")]
        public int? Ownershipcode { get; set; }

        /// <summary>
        /// Gets or sets select the size category or range of the account for
        /// segmentation and reporting purposes.
        /// </summary>
        [JsonProperty(PropertyName = "customersizecode")]
        public int? Customersizecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_bceid")]
        public string BcgovBceid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_bcgov_currentbusinessphysicaladdress_value")]
        public string _bcgovCurrentbusinessphysicaladdressValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_registeredsellercertificateexpirydate")]
        public System.DateTimeOffset? BcgovRegisteredsellercertificateexpirydate { get; set; }

        /// <summary>
        /// Gets or sets type the credit limit of the account. This is a useful
        /// reference when you address invoice and accounting issues with the
        /// customer.
        /// </summary>
        [JsonProperty(PropertyName = "creditlimit")]
        public decimal? Creditlimit { get; set; }

        /// <summary>
        /// Gets or sets choose the primary contact for the business profile to
        /// provide quick access to contact details.
        /// </summary>
        [JsonProperty(PropertyName = "_primarycontactid_value")]
        public string _primarycontactidValue { get; set; }

        /// <summary>
        /// Gets or sets version number of the account.
        /// </summary>
        [JsonProperty(PropertyName = "versionnumber")]
        public string Versionnumber { get; set; }

        /// <summary>
        /// Gets or sets type the county for the primary address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_county")]
        public string Address1County { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimage_timestamp")]
        public long? EntityimageTimestamp { get; set; }

        /// <summary>
        /// Gets or sets type a third phone number for this account.
        /// </summary>
        [JsonProperty(PropertyName = "telephone3")]
        public string Telephone3 { get; set; }

        /// <summary>
        /// Gets or sets the date time for Open Revenue.
        /// </summary>
        [JsonProperty(PropertyName = "openrevenue_date")]
        public System.DateTimeOffset? OpenrevenueDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_waiveradministrativehold")]
        public bool? BcgovWaiveradministrativehold { get; set; }

        /// <summary>
        /// Gets or sets select whether the account allows bulk postal mail
        /// sent through marketing campaigns or quick campaigns. If Do Not
        /// Allow is selected, the account can be added to marketing lists, but
        /// will be excluded from the postal mail.
        /// </summary>
        [JsonProperty(PropertyName = "donotbulkpostalmail")]
        public bool? Donotbulkpostalmail { get; set; }

        /// <summary>
        /// Gets or sets select the freight terms for the primary address to
        /// make sure shipping orders are processed correctly.
        /// </summary>
        [JsonProperty(PropertyName = "address1_freighttermscode")]
        public int? Address1Freighttermscode { get; set; }

        /// <summary>
        /// Gets or sets type the first line of the secondary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_line1")]
        public string Address2Line1 { get; set; }

        /// <summary>
        /// Gets or sets shows how long, in minutes, that the record was on
        /// hold.
        /// </summary>
        [JsonProperty(PropertyName = "onholdtime")]
        public int? Onholdtime { get; set; }

        /// <summary>
        /// Gets or sets select whether the account allows direct mail. If Do
        /// Not Allow is selected, the account will be excluded from letter
        /// activities distributed in marketing campaigns.
        /// </summary>
        [JsonProperty(PropertyName = "donotpostalmail")]
        public bool? Donotpostalmail { get; set; }

        /// <summary>
        /// Gets or sets shows the external party who created the record.
        /// </summary>
        [JsonProperty(PropertyName = "_createdbyexternalparty_value")]
        public string _createdbyexternalpartyValue { get; set; }

        /// <summary>
        /// Gets or sets type a second phone number for this account.
        /// </summary>
        [JsonProperty(PropertyName = "telephone2")]
        public string Telephone2 { get; set; }

        /// <summary>
        /// Gets or sets shows the business unit that the record owner belongs
        /// to.
        /// </summary>
        [JsonProperty(PropertyName = "_owningbusinessunit_value")]
        public string _owningbusinessunitValue { get; set; }

        /// <summary>
        /// Gets or sets primary Satori ID for Account
        /// </summary>
        [JsonProperty(PropertyName = "primarysatoriid")]
        public string Primarysatoriid { get; set; }

        /// <summary>
        /// Gets or sets select a shipping method for deliveries sent to the
        /// account's address to designate the preferred carrier or other
        /// delivery option.
        /// </summary>
        [JsonProperty(PropertyName = "shippingmethodcode")]
        public int? Shippingmethodcode { get; set; }

        /// <summary>
        /// Gets or sets unique identifier for address 1.
        /// </summary>
        [JsonProperty(PropertyName = "address1_addressid")]
        public string Address1Addressid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_mailaddressdiffromphysaddress")]
        public bool? BcgovMailaddressdiffromphysaddress { get; set; }

        /// <summary>
        /// Gets or sets type the main phone number associated with the
        /// secondary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_telephone1")]
        public string Address2Telephone1 { get; set; }

        /// <summary>
        /// Gets or sets type the fax number associated with the primary
        /// address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_fax")]
        public string Address1Fax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_declarationofcorrectinformation")]
        public bool? BcgovDeclarationofcorrectinformation { get; set; }

        /// <summary>
        /// Gets or sets enter the user or team who is assigned to manage the
        /// record. This field is updated every time the record is assigned to
        /// a different user.
        /// </summary>
        [JsonProperty(PropertyName = "_ownerid_value")]
        public string _owneridValue { get; set; }

        /// <summary>
        /// Gets or sets shows who created the record on behalf of another
        /// user.
        /// </summary>
        [JsonProperty(PropertyName = "_createdonbehalfby_value")]
        public string _createdonbehalfbyValue { get; set; }

        /// <summary>
        /// Gets or sets select the preferred method of contact.
        /// </summary>
        [JsonProperty(PropertyName = "preferredcontactmethodcode")]
        public int? Preferredcontactmethodcode { get; set; }

        /// <summary>
        /// Gets or sets type the city for the secondary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_city")]
        public string Address2City { get; set; }

        /// <summary>
        /// Gets or sets type the latitude value for the secondary address for
        /// use in mapping and other applications.
        /// </summary>
        [JsonProperty(PropertyName = "address2_latitude")]
        public decimal? Address2Latitude { get; set; }

        /// <summary>
        /// Gets or sets shows the complete secondary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_composite")]
        public string Address2Composite { get; set; }

        /// <summary>
        /// Gets or sets shows the credit limit converted to the system's
        /// default base currency for reporting purposes.
        /// </summary>
        [JsonProperty(PropertyName = "creditlimit_base")]
        public decimal? CreditlimitBase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_clientid")]
        public string BcgovClientid { get; set; }

        /// <summary>
        /// Gets or sets the base currency equivalent of the aging 90 field.
        /// </summary>
        [JsonProperty(PropertyName = "aging90_base")]
        public decimal? Aging90Base { get; set; }

        /// <summary>
        /// Gets or sets type the ZIP Code or postal code for the secondary
        /// address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_postalcode")]
        public string Address2Postalcode { get; set; }

        /// <summary>
        /// Gets or sets type a descriptive name for the secondary address,
        /// such as Corporate Headquarters.
        /// </summary>
        [JsonProperty(PropertyName = "address2_name")]
        public string Address2Name { get; set; }

        /// <summary>
        /// Gets or sets shows whether the account has been merged with another
        /// account.
        /// </summary>
        [JsonProperty(PropertyName = "merged")]
        public bool? Merged { get; set; }

        /// <summary>
        /// Gets or sets select the preferred day of the week for service
        /// appointments.
        /// </summary>
        [JsonProperty(PropertyName = "preferredappointmentdaycode")]
        public int? Preferredappointmentdaycode { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the team who owns the account.
        /// </summary>
        [JsonProperty(PropertyName = "_owningteam_value")]
        public string _owningteamValue { get; set; }

        /// <summary>
        /// Gets or sets type the third line of the secondary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_line3")]
        public string Address2Line3 { get; set; }

        /// <summary>
        /// Gets or sets shows the annual revenue converted to the system's
        /// default base currency. The calculations use the exchange rate
        /// specified in the Currencies area.
        /// </summary>
        [JsonProperty(PropertyName = "revenue_base")]
        public decimal? RevenueBase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_aodelbusinessname")]
        public string BcgovAodelbusinessname { get; set; }

        /// <summary>
        /// Gets or sets for system use only.
        /// </summary>
        [JsonProperty(PropertyName = "aging30")]
        public decimal? Aging30 { get; set; }

        /// <summary>
        /// Gets or sets type the URL for the account's FTP site to enable
        /// users to access data and share documents.
        /// </summary>
        [JsonProperty(PropertyName = "ftpsiteurl")]
        public string Ftpsiteurl { get; set; }

        /// <summary>
        /// Gets or sets select whether the account allows bulk email sent
        /// through campaigns. If Do Not Allow is selected, the account can be
        /// added to marketing lists, but is excluded from email.
        /// </summary>
        [JsonProperty(PropertyName = "donotbulkemail")]
        public bool? Donotbulkemail { get; set; }

        /// <summary>
        /// Gets or sets shows the lead that the account was created from if
        /// the account was created by converting a lead in Microsoft Dynamics
        /// 365. This is used to relate the account to data on the originating
        /// lead for use in reporting and analytics.
        /// </summary>
        [JsonProperty(PropertyName = "_originatingleadid_value")]
        public string _originatingleadidValue { get; set; }

        /// <summary>
        /// Gets or sets type an alternate email address for the account.
        /// </summary>
        [JsonProperty(PropertyName = "emailaddress3")]
        public string Emailaddress3 { get; set; }

        /// <summary>
        /// Gets or sets shows the external party who modified the record.
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedbyexternalparty_value")]
        public string _modifiedbyexternalpartyValue { get; set; }

        /// <summary>
        /// Gets or sets select the payment terms to indicate when the customer
        /// needs to pay the total amount.
        /// </summary>
        [JsonProperty(PropertyName = "paymenttermscode")]
        public int? Paymenttermscode { get; set; }

        /// <summary>
        /// Gets or sets type the business profile's website URL.
        /// </summary>
        [JsonProperty(PropertyName = "websiteurl")]
        public string Websiteurl { get; set; }

        /// <summary>
        /// Gets or sets type the annual revenue for the account, used as an
        /// indicator in financial performance analysis.
        /// </summary>
        [JsonProperty(PropertyName = "revenue")]
        public decimal? Revenue { get; set; }

        /// <summary>
        /// Gets or sets select a shipping method for deliveries sent to this
        /// address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_shippingmethodcode")]
        public int? Address1Shippingmethodcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_aositelicenceexpirydate")]
        public System.DateTimeOffset? BcgovAositelicenceexpirydate { get; set; }

        /// <summary>
        /// Gets or sets type additional information to describe the account,
        /// such as an excerpt from the company's website.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_aositelicencebusinessname")]
        public string BcgovAositelicencebusinessname { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_registeredsellerstatus")]
        public int? BcgovRegisteredsellerstatus { get; set; }

        /// <summary>
        /// Gets or sets type the stock exchange symbol for the account to
        /// track financial performance of the company. You can click the code
        /// entered in this field to access the latest trading information from
        /// MSN Money.
        /// </summary>
        [JsonProperty(PropertyName = "tickersymbol")]
        public string Tickersymbol { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_aolicenceexpirynotificationsent")]
        public bool? BcgovAolicenceexpirynotificationsent { get; set; }

        /// <summary>
        /// Gets or sets contains the date and time stamp of the last on hold
        /// time.
        /// </summary>
        [JsonProperty(PropertyName = "lastonholdtime")]
        public System.DateTimeOffset? Lastonholdtime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_aootherlicencebusinessname")]
        public string BcgovAootherlicencebusinessname { get; set; }

        /// <summary>
        /// Gets or sets select the account's status.
        /// </summary>
        [JsonProperty(PropertyName = "statuscode")]
        public int? Statuscode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_waivercertificateexpirydate")]
        public System.DateTimeOffset? BcgovWaivercertificateexpirydate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_legislativeauthoritystatusdate")]
        public System.DateTimeOffset? BcgovLegislativeauthoritystatusdate { get; set; }

        /// <summary>
        /// Gets or sets type the market capitalization of the account to
        /// identify the company's equity, used as an indicator in financial
        /// performance analysis.
        /// </summary>
        [JsonProperty(PropertyName = "marketcap")]
        public decimal? Marketcap { get; set; }

        /// <summary>
        /// Gets or sets choose the parent account associated with this account
        /// to show parent and child businesses in reporting and analytics.
        /// </summary>
        [JsonProperty(PropertyName = "_parentaccountid_value")]
        public string _parentaccountidValue { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the user who owns the account.
        /// </summary>
        [JsonProperty(PropertyName = "_owninguser_value")]
        public string _owninguserValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_submitteddate")]
        public System.DateTimeOffset? BcgovSubmitteddate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_bcgov_additionalcontact_value")]
        public string _bcgovAdditionalcontactValue { get; set; }

        /// <summary>
        /// Gets or sets unique identifier for address 2.
        /// </summary>
        [JsonProperty(PropertyName = "address2_addressid")]
        public string Address2Addressid { get; set; }

        /// <summary>
        /// Gets or sets choose the preferred service representative for
        /// reference when you schedule service activities for the account.
        /// </summary>
        [JsonProperty(PropertyName = "_preferredsystemuserid_value")]
        public string _preferredsystemuseridValue { get; set; }

        /// <summary>
        /// Gets or sets type the longitude value for the secondary address for
        /// use in mapping and other applications.
        /// </summary>
        [JsonProperty(PropertyName = "address2_longitude")]
        public decimal? Address2Longitude { get; set; }

        /// <summary>
        /// Gets or sets choose the default price list associated with the
        /// account to make sure the correct product prices for this customer
        /// are applied in sales opportunities, quotes, and orders.
        /// </summary>
        [JsonProperty(PropertyName = "_defaultpricelevelid_value")]
        public string _defaultpricelevelidValue { get; set; }

        /// <summary>
        /// Gets or sets state of Open Revenue.
        /// </summary>
        [JsonProperty(PropertyName = "openrevenue_state")]
        public int? OpenrevenueState { get; set; }

        /// <summary>
        /// Gets or sets type the name of the main contact at the account's
        /// primary address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_primarycontactname")]
        public string Address1Primarycontactname { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_foippaconsent")]
        public bool? BcgovFoippaconsent { get; set; }

        /// <summary>
        /// Gets or sets select a category to indicate whether the customer
        /// account is standard or preferred.
        /// </summary>
        [JsonProperty(PropertyName = "accountcategorycode")]
        public int? Accountcategorycode { get; set; }

        /// <summary>
        /// Gets or sets shows whether the account is active or inactive.
        /// Inactive accounts are read-only and can't be edited unless they are
        /// reactivated.
        /// </summary>
        [JsonProperty(PropertyName = "statecode")]
        public int? Statecode { get; set; }

        /// <summary>
        /// Gets or sets shows the market capitalization converted to the
        /// system's default base currency.
        /// </summary>
        [JsonProperty(PropertyName = "marketcap_base")]
        public decimal? MarketcapBase { get; set; }

        /// <summary>
        /// Gets or sets select whether the account allows faxes. If Do Not
        /// Allow is selected, the account will be excluded from fax activities
        /// distributed in marketing campaigns.
        /// </summary>
        [JsonProperty(PropertyName = "donotfax")]
        public bool? Donotfax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_legislativeauthoritystatusnotificationdat")]
        public System.DateTimeOffset? BcgovLegislativeauthoritystatusnotificationdat { get; set; }

        /// <summary>
        /// Gets or sets type a third phone number associated with the
        /// secondary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_telephone3")]
        public string Address2Telephone3 { get; set; }

        /// <summary>
        /// Gets or sets type the post office box number of the secondary
        /// address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_postofficebox")]
        public string Address2Postofficebox { get; set; }

        /// <summary>
        /// Gets or sets whether is only for marketing
        /// </summary>
        [JsonProperty(PropertyName = "marketingonly")]
        public bool? Marketingonly { get; set; }

        /// <summary>
        /// Gets or sets choose the account's preferred service for reference
        /// when you schedule service activities.
        /// </summary>
        [JsonProperty(PropertyName = "_preferredserviceid_value")]
        public string _preferredserviceidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_registeredselleradministrativehold")]
        public bool? BcgovRegisteredselleradministrativehold { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the data import or data migration
        /// that created this record.
        /// </summary>
        [JsonProperty(PropertyName = "importsequencenumber")]
        public int? Importsequencenumber { get; set; }

        /// <summary>
        /// Gets or sets type the UPS zone of the primary address to make sure
        /// shipping charges are calculated correctly and deliveries are made
        /// promptly, if shipped by UPS.
        /// </summary>
        [JsonProperty(PropertyName = "address1_upszone")]
        public string Address1Upszone { get; set; }

        /// <summary>
        /// Gets or sets shows the ID of the stage.
        /// </summary>
        [JsonProperty(PropertyName = "stageid")]
        public string Stageid { get; set; }

        /// <summary>
        /// Gets or sets time zone code that was in use when the record was
        /// created.
        /// </summary>
        [JsonProperty(PropertyName = "utcconversiontimezonecode")]
        public int? Utcconversiontimezonecode { get; set; }

        /// <summary>
        /// Gets or sets select whether the account allows direct email sent
        /// from Microsoft Dynamics 365.
        /// </summary>
        [JsonProperty(PropertyName = "donotemail")]
        public bool? Donotemail { get; set; }

        /// <summary>
        /// Gets or sets for system use only.
        /// </summary>
        [JsonProperty(PropertyName = "aging60")]
        public decimal? Aging60 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_bcgov_currentbusinessmailingaddress_value")]
        public string _bcgovCurrentbusinessmailingaddressValue { get; set; }

        /// <summary>
        /// Gets or sets select the category that best describes the
        /// relationship between the account and your organization.
        /// </summary>
        [JsonProperty(PropertyName = "customertypecode")]
        public int? Customertypecode { get; set; }

        /// <summary>
        /// Gets or sets type the main phone number for this business profile.
        /// </summary>
        [JsonProperty(PropertyName = "telephone1")]
        public string Telephone1 { get; set; }

        /// <summary>
        /// Gets or sets state of Open Deals.
        /// </summary>
        [JsonProperty(PropertyName = "opendeals_state")]
        public int? OpendealsState { get; set; }

        /// <summary>
        /// Gets or sets type the post office box number of the primary
        /// address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_postofficebox")]
        public string Address1Postofficebox { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_doingbusinessasname")]
        public string BcgovDoingbusinessasname { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_aoadministrativehold")]
        public bool? BcgovAoadministrativehold { get; set; }

        /// <summary>
        /// Gets or sets shows who last updated the record.
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedby_value")]
        public string _modifiedbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_businesstype")]
        public int? BcgovBusinesstype { get; set; }

        /// <summary>
        /// Gets or sets type the phonetic spelling of the company name, if
        /// specified in Japanese, to make sure the name is pronounced
        /// correctly in phone calls and other communications.
        /// </summary>
        [JsonProperty(PropertyName = "yominame")]
        public string Yominame { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_businessnumber")]
        public string BcgovBusinessnumber { get; set; }

        /// <summary>
        /// Gets or sets type the country or region for the secondary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_country")]
        public string Address2Country { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_businessprofileupdate")]
        public bool? BcgovBusinessprofileupdate { get; set; }

        /// <summary>
        /// Gets or sets type the second line of the primary address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_line2")]
        public string Address1Line2 { get; set; }

        /// <summary>
        /// Gets or sets select whether the account accepts marketing
        /// materials, such as brochures or catalogs.
        /// </summary>
        [JsonProperty(PropertyName = "donotsendmm")]
        public bool? Donotsendmm { get; set; }

        /// <summary>
        /// Gets or sets type the ZIP Code or postal code for the primary
        /// address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_postalcode")]
        public string Address1Postalcode { get; set; }

        /// <summary>
        /// Gets or sets for internal use only.
        /// </summary>
        [JsonProperty(PropertyName = "traversedpath")]
        public string Traversedpath { get; set; }

        /// <summary>
        /// Gets or sets choose the local currency for the record to make sure
        /// budgets are reported in the correct currency.
        /// </summary>
        [JsonProperty(PropertyName = "_transactioncurrencyid_value")]
        public string _transactioncurrencyidValue { get; set; }

        /// <summary>
        /// Gets or sets type the fax number for the account.
        /// </summary>
        [JsonProperty(PropertyName = "fax")]
        public string Fax { get; set; }

        /// <summary>
        /// Gets or sets type the number of employees that work at the account
        /// for use in marketing segmentation and demographic analysis.
        /// </summary>
        [JsonProperty(PropertyName = "numberofemployees")]
        public int? Numberofemployees { get; set; }

        /// <summary>
        /// Gets or sets the date time for Open Deals.
        /// </summary>
        [JsonProperty(PropertyName = "opendeals_date")]
        public System.DateTimeOffset? OpendealsDate { get; set; }

        /// <summary>
        /// Gets or sets type the UPS zone of the secondary address to make
        /// sure shipping charges are calculated correctly and deliveries are
        /// made promptly, if shipped by UPS.
        /// </summary>
        [JsonProperty(PropertyName = "address2_upszone")]
        public string Address2Upszone { get; set; }

        /// <summary>
        /// Gets or sets select the freight terms for the secondary address to
        /// make sure shipping orders are processed correctly.
        /// </summary>
        [JsonProperty(PropertyName = "address2_freighttermscode")]
        public int? Address2Freighttermscode { get; set; }

        /// <summary>
        /// Gets or sets select a rating to indicate the value of the customer
        /// account.
        /// </summary>
        [JsonProperty(PropertyName = "accountratingcode")]
        public int? Accountratingcode { get; set; }

        /// <summary>
        /// Gets or sets for system use only.
        /// </summary>
        [JsonProperty(PropertyName = "aging90")]
        public decimal? Aging90 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_bcgov_currentregisteredsellercertificate_value")]
        public string _bcgovCurrentregisteredsellercertificateValue { get; set; }

        /// <summary>
        /// Gets or sets type the longitude value for the primary address for
        /// use in mapping and other applications.
        /// </summary>
        [JsonProperty(PropertyName = "address1_longitude")]
        public decimal? Address1Longitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_consentforemailcommunication")]
        public bool? BcgovConsentforemailcommunication { get; set; }

        /// <summary>
        /// Gets or sets for system use only. Legacy Microsoft Dynamics CRM 3.0
        /// workflow data.
        /// </summary>
        [JsonProperty(PropertyName = "participatesinworkflow")]
        public bool? Participatesinworkflow { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_bcgov_currentwaivercertificate_value")]
        public string _bcgovCurrentwaivercertificateValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_waiverstatus")]
        public int? BcgovWaiverstatus { get; set; }

        /// <summary>
        /// Gets or sets type the secondary email address for the account.
        /// </summary>
        [JsonProperty(PropertyName = "emailaddress2")]
        public string Emailaddress2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_aootherlicencenumber")]
        public string BcgovAootherlicencenumber { get; set; }

        /// <summary>
        /// Gets or sets select whether the credit for the account is on hold.
        /// This is a useful reference while addressing the invoice and
        /// accounting issues with the customer.
        /// </summary>
        [JsonProperty(PropertyName = "creditonhold")]
        public bool? Creditonhold { get; set; }

        /// <summary>
        /// Gets or sets type the main phone number associated with the primary
        /// address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_telephone1")]
        public string Address1Telephone1 { get; set; }

        /// <summary>
        /// Gets or sets shows the date and time when the record was created.
        /// The date and time are displayed in the time zone selected in
        /// Microsoft Dynamics 365 options.
        /// </summary>
        [JsonProperty(PropertyName = "createdon")]
        public System.DateTimeOffset? Createdon { get; set; }

        /// <summary>
        /// Gets or sets type the company or business name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets shows the conversion rate of the record's currency.
        /// The exchange rate is used to convert all money fields in the record
        /// from the local currency to the system's default currency.
        /// </summary>
        [JsonProperty(PropertyName = "exchangerate")]
        public decimal? Exchangerate { get; set; }

        /// <summary>
        /// Gets or sets select the secondary address type.
        /// </summary>
        [JsonProperty(PropertyName = "address2_addresstypecode")]
        public int? Address2Addresstypecode { get; set; }

        /// <summary>
        /// Gets or sets type the state or province of the primary address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_stateorprovince")]
        public string Address1Stateorprovince { get; set; }

        /// <summary>
        /// Gets or sets type the second line of the secondary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_line2")]
        public string Address2Line2 { get; set; }

        /// <summary>
        /// Gets or sets shows the default image for the record.
        /// </summary>
        [JsonConverter(typeof(Base64UrlJsonConverter))]
        [JsonProperty(PropertyName = "entityimage")]
        public byte[] Entityimage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_aodelexpirydate")]
        public System.DateTimeOffset? BcgovAodelexpirydate { get; set; }

        /// <summary>
        /// Gets or sets primary Twitter ID for Account
        /// </summary>
        [JsonProperty(PropertyName = "primarytwitterid")]
        public string Primarytwitterid { get; set; }

        /// <summary>
        /// Gets or sets total time spent for emails (read and write) and
        /// meetings by me in relation to account record.
        /// </summary>
        [JsonProperty(PropertyName = "timespentbymeonemailandmeetings")]
        public string Timespentbymeonemailandmeetings { get; set; }

        /// <summary>
        /// Gets or sets type an ID number or code for the account to quickly
        /// search and identify the account in system views.
        /// </summary>
        [JsonProperty(PropertyName = "accountnumber")]
        public string Accountnumber { get; set; }

        /// <summary>
        /// Gets or sets type the first line of the primary address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_line1")]
        public string Address1Line1 { get; set; }

        /// <summary>
        /// Gets or sets choose the sales region or territory for the account
        /// to make sure the account is assigned to the correct representative
        /// and for use in segmentation and analysis.
        /// </summary>
        [JsonProperty(PropertyName = "_territoryid_value")]
        public string _territoryidValue { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the account.
        /// </summary>
        [JsonProperty(PropertyName = "accountid")]
        public string Accountid { get; set; }

        /// <summary>
        /// Gets or sets shows the complete primary address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_composite")]
        public string Address1Composite { get; set; }

        /// <summary>
        /// Gets or sets choose the service level agreement (SLA) that you want
        /// to apply to the Account record.
        /// </summary>
        [JsonProperty(PropertyName = "_slaid_value")]
        public string _slaidValue { get; set; }

        /// <summary>
        /// Gets or sets type the county for the secondary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_county")]
        public string Address2County { get; set; }

        /// <summary>
        /// Gets or sets information about whether to allow following email
        /// activity like opens, attachment views and link clicks for emails
        /// sent to the account.
        /// </summary>
        [JsonProperty(PropertyName = "followemail")]
        public bool? Followemail { get; set; }

        /// <summary>
        /// Gets or sets select whether the account allows phone calls. If Do
        /// Not Allow is selected, the account will be excluded from phone call
        /// activities distributed in marketing campaigns.
        /// </summary>
        [JsonProperty(PropertyName = "donotphone")]
        public bool? Donotphone { get; set; }

        /// <summary>
        /// Gets or sets select a classification code to indicate the potential
        /// value of the customer account based on the projected return on
        /// investment, cooperation level, sales cycle length or other
        /// criteria.
        /// </summary>
        [JsonProperty(PropertyName = "accountclassificationcode")]
        public int? Accountclassificationcode { get; set; }

        /// <summary>
        /// Gets or sets choose the account's preferred service facility or
        /// equipment to make sure services are scheduled correctly for the
        /// customer.
        /// </summary>
        [JsonProperty(PropertyName = "_preferredequipmentid_value")]
        public string _preferredequipmentidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_legislativeauthoritylicensestatus")]
        public int? BcgovLegislativeauthoritylicensestatus { get; set; }

        /// <summary>
        /// Gets or sets type the Standard Industrial Classification (SIC) code
        /// that indicates the account's primary industry of business, for use
        /// in marketing segmentation and demographic analysis.
        /// </summary>
        [JsonProperty(PropertyName = "sic")]
        public string Sic { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimage_url")]
        public string EntityimageUrl { get; set; }

        /// <summary>
        /// Gets or sets shows the ID of the process.
        /// </summary>
        [JsonProperty(PropertyName = "processid")]
        public string Processid { get; set; }

        /// <summary>
        /// Gets or sets type a second phone number associated with the
        /// secondary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_telephone2")]
        public string Address2Telephone2 { get; set; }

        /// <summary>
        /// Gets or sets select the primary address type.
        /// </summary>
        [JsonProperty(PropertyName = "address1_addresstypecode")]
        public int? Address1Addresstypecode { get; set; }

        /// <summary>
        /// Gets or sets select the time zone, or UTC offset, for this address
        /// so that other people can reference it when they contact someone at
        /// this address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_utcoffset")]
        public int? Address1Utcoffset { get; set; }

        /// <summary>
        /// Gets or sets type the fax number associated with the secondary
        /// address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_fax")]
        public string Address2Fax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_aootherlicenceexpirydate")]
        public System.DateTimeOffset? BcgovAootherlicenceexpirydate { get; set; }

        /// <summary>
        /// Gets or sets select the legal designation of the business profile.
        /// </summary>
        [JsonProperty(PropertyName = "businesstypecode")]
        public int? Businesstypecode { get; set; }

        /// <summary>
        /// Gets or sets the base currency equivalent of the aging 60 field.
        /// </summary>
        [JsonProperty(PropertyName = "aging60_base")]
        public decimal? Aging60Base { get; set; }

        /// <summary>
        /// Gets or sets type the country or region for the primary address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_country")]
        public string Address1Country { get; set; }

        /// <summary>
        /// Gets or sets shows who created the record on behalf of another
        /// user.
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedonbehalfby_value")]
        public string _modifiedonbehalfbyValue { get; set; }

        /// <summary>
        /// Gets or sets select a shipping method for deliveries sent to this
        /// address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_shippingmethodcode")]
        public int? Address2Shippingmethodcode { get; set; }

        /// <summary>
        /// Gets or sets type the stock exchange at which the account is listed
        /// to track their stock and financial performance of the company.
        /// </summary>
        [JsonProperty(PropertyName = "stockexchange")]
        public string Stockexchange { get; set; }

        /// <summary>
        /// Gets or sets shows who created the record.
        /// </summary>
        [JsonProperty(PropertyName = "_createdby_value")]
        public string _createdbyValue { get; set; }

        /// <summary>
        /// Gets or sets type the third line of the primary address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_line3")]
        public string Address1Line3 { get; set; }

        /// <summary>
        /// Gets or sets the base currency equivalent of the aging 30 field.
        /// </summary>
        [JsonProperty(PropertyName = "aging30_base")]
        public decimal? Aging30Base { get; set; }

        /// <summary>
        /// Gets or sets sum of open revenue against an account and its child
        /// accounts.
        /// </summary>
        [JsonProperty(PropertyName = "openrevenue_base")]
        public decimal? OpenrevenueBase { get; set; }

        /// <summary>
        /// Gets or sets type the number of shares available to the public for
        /// the account. This number is used as an indicator in financial
        /// performance analysis.
        /// </summary>
        [JsonProperty(PropertyName = "sharesoutstanding")]
        public int? Sharesoutstanding { get; set; }

        /// <summary>
        /// Gets or sets last SLA that was applied to this case. This field is
        /// for internal use only.
        /// </summary>
        [JsonProperty(PropertyName = "_slainvokedid_value")]
        public string _slainvokedidValue { get; set; }

        /// <summary>
        /// Gets or sets type the city for the primary address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_city")]
        public string Address1City { get; set; }

        /// <summary>
        /// Gets or sets type the name of the main contact at the account's
        /// secondary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_primarycontactname")]
        public string Address2Primarycontactname { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_aodelnumber")]
        public string BcgovAodelnumber { get; set; }

        /// <summary>
        /// Gets or sets type the latitude value for the primary address for
        /// use in mapping and other applications.
        /// </summary>
        [JsonProperty(PropertyName = "address1_latitude")]
        public decimal? Address1Latitude { get; set; }

        /// <summary>
        /// Gets or sets shows the date and time when the record was last
        /// updated. The date and time are displayed in the time zone selected
        /// in Microsoft Dynamics 365 options.
        /// </summary>
        [JsonProperty(PropertyName = "modifiedon")]
        public System.DateTimeOffset? Modifiedon { get; set; }

        /// <summary>
        /// Gets or sets shows the master account that the account was merged
        /// with.
        /// </summary>
        [JsonProperty(PropertyName = "_masterid_value")]
        public string _masteridValue { get; set; }

        /// <summary>
        /// Gets or sets select the time zone, or UTC offset, for this address
        /// so that other people can reference it when they contact someone at
        /// this address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_utcoffset")]
        public int? Address2Utcoffset { get; set; }

        /// <summary>
        /// Gets or sets type the primary email address for the business
        /// profile.
        /// </summary>
        [JsonProperty(PropertyName = "emailaddress1")]
        public string Emailaddress1 { get; set; }

        /// <summary>
        /// Gets or sets for internal use only.
        /// </summary>
        [JsonProperty(PropertyName = "timezoneruleversionnumber")]
        public int? Timezoneruleversionnumber { get; set; }

        /// <summary>
        /// Gets or sets number of open opportunities against an account and
        /// its child accounts.
        /// </summary>
        [JsonProperty(PropertyName = "opendeals")]
        public int? Opendeals { get; set; }

        /// <summary>
        /// Gets or sets type the state or province of the secondary address.
        /// </summary>
        [JsonProperty(PropertyName = "address2_stateorprovince")]
        public string Address2Stateorprovince { get; set; }

        /// <summary>
        /// Gets or sets select the preferred time of day for service
        /// appointments.
        /// </summary>
        [JsonProperty(PropertyName = "preferredappointmenttimecode")]
        public int? Preferredappointmenttimecode { get; set; }

        /// <summary>
        /// Gets or sets select the account's primary industry for use in
        /// marketing segmentation and demographic analysis.
        /// </summary>
        [JsonProperty(PropertyName = "industrycode")]
        public int? Industrycode { get; set; }

        /// <summary>
        /// Gets or sets type a third phone number associated with the primary
        /// address.
        /// </summary>
        [JsonProperty(PropertyName = "address1_telephone3")]
        public string Address1Telephone3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accountleads_association")]
        public IList<MicrosoftDynamicsCRMlead> AccountleadsAssociation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "listaccount_association")]
        public IList<MicrosoftDynamicsCRMlist> ListaccountAssociation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_entitlement_Customer")]
        public IList<MicrosoftDynamicsCRMentitlement> AccountEntitlementCustomer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_entitlement_Account")]
        public IList<MicrosoftDynamicsCRMentitlement> AccountEntitlementAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_bookableresource_AccountId")]
        public IList<MicrosoftDynamicsCRMbookableresource> AccountBookableresourceAccountId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ownerid")]
        public MicrosoftDynamicsCRMprincipal Ownerid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_ActivityPointers")]
        public IList<MicrosoftDynamicsCRMactivitypointer> AccountActivityPointers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_ServiceAppointments")]
        public IList<MicrosoftDynamicsCRMserviceappointment> AccountServiceAppointments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_SyncErrors")]
        public IList<MicrosoftDynamicsCRMsyncerror> AccountSyncErrors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdby")]
        public MicrosoftDynamicsCRMsystemuser Createdby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lead_customer_accounts")]
        public IList<MicrosoftDynamicsCRMlead> LeadCustomerAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_Email_SendersAccount")]
        public IList<MicrosoftDynamicsCRMemail> AccountEmailSendersAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_Email_EmailSender")]
        public IList<MicrosoftDynamicsCRMemail> AccountEmailEmailSender { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contract_billingcustomer_accounts")]
        public IList<MicrosoftDynamicsCRMcontract> ContractBillingcustomerAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_Annotation")]
        public IList<MicrosoftDynamicsCRMannotation> AccountAnnotation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_SharepointDocumentLocation")]
        public IList<MicrosoftDynamicsCRMsharepointdocumentlocation> AccountSharepointDocumentLocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preferredserviceid")]
        public MicrosoftDynamicsCRMservice Preferredserviceid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sla_account_sla")]
        public MicrosoftDynamicsCRMsla SlaAccountSla { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_connections2")]
        public IList<MicrosoftDynamicsCRMconnection> AccountConnections2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_PostFollows")]
        public IList<MicrosoftDynamicsCRMpostfollow> AccountPostFollows { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_PostRegardings")]
        public IList<MicrosoftDynamicsCRMpostregarding> AccountPostRegardings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_Faxes")]
        public IList<MicrosoftDynamicsCRMfax> AccountFaxes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "masterid")]
        public MicrosoftDynamicsCRMaccount Masterid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_master_account")]
        public IList<MicrosoftDynamicsCRMaccount> AccountMasterAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preferredequipmentid")]
        public MicrosoftDynamicsCRMequipment Preferredequipmentid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owningbusinessunit")]
        public MicrosoftDynamicsCRMbusinessunit Owningbusinessunit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_AsyncOperations")]
        public IList<MicrosoftDynamicsCRMasyncoperation> AccountAsyncOperations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactioncurrencyid")]
        public MicrosoftDynamicsCRMtransactioncurrency Transactioncurrencyid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_DuplicateBaseRecord")]
        public IList<MicrosoftDynamicsCRMduplicaterecord> AccountDuplicateBaseRecord { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preferredsystemuserid")]
        public MicrosoftDynamicsCRMsystemuser Preferredsystemuserid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreatedAccount_BulkOperationLogs2")]
        public IList<MicrosoftDynamicsCRMbulkoperationlog> CreatedAccountBulkOperationLogs2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Createdonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_RecurringAppointmentMasters")]
        public IList<MicrosoftDynamicsCRMrecurringappointmentmaster> AccountRecurringAppointmentMasters { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_Phonecalls")]
        public IList<MicrosoftDynamicsCRMphonecall> AccountPhonecalls { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "primarycontactid")]
        public MicrosoftDynamicsCRMcontact Primarycontactid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_SocialActivities")]
        public IList<MicrosoftDynamicsCRMsocialactivity> AccountSocialActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SocialActivity_PostAuthorAccount_accounts")]
        public IList<MicrosoftDynamicsCRMsocialactivity> SocialActivityPostAuthorAccountAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "opportunity_customer_accounts")]
        public IList<MicrosoftDynamicsCRMopportunity> OpportunityCustomerAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SourceAccount_BulkOperationLogs")]
        public IList<MicrosoftDynamicsCRMbulkoperationlog> SourceAccountBulkOperationLogs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_CustomerAddress")]
        public IList<MicrosoftDynamicsCRMcustomeraddress> AccountCustomerAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "slakpiinstance_account")]
        public IList<MicrosoftDynamicsCRMslakpiinstance> SlakpiinstanceAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "originatingleadid")]
        public MicrosoftDynamicsCRMlead Originatingleadid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_Tasks")]
        public IList<MicrosoftDynamicsCRMtask> AccountTasks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "opportunity_parent_account")]
        public IList<MicrosoftDynamicsCRMopportunity> OpportunityParentAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "slainvokedid_account_sla")]
        public MicrosoftDynamicsCRMsla SlainvokedidAccountSla { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_BulkDeleteFailures")]
        public IList<MicrosoftDynamicsCRMbulkdeletefailure> AccountBulkDeleteFailures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "quote_customer_accounts")]
        public IList<MicrosoftDynamicsCRMquote> QuoteCustomerAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SocialActivity_PostAuthor_accounts")]
        public IList<MicrosoftDynamicsCRMsocialactivity> SocialActivityPostAuthorAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "territoryid")]
        public MicrosoftDynamicsCRMterritory Territoryid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contact_customer_accounts")]
        public IList<MicrosoftDynamicsCRMcontact> ContactCustomerAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_customer_accounts")]
        public IList<MicrosoftDynamicsCRMincident> IncidentCustomerAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "invoice_customer_accounts")]
        public IList<MicrosoftDynamicsCRMinvoice> InvoiceCustomerAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_Appointments")]
        public IList<MicrosoftDynamicsCRMappointment> AccountAppointments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contractlineitem_customer_accounts")]
        public IList<MicrosoftDynamicsCRMcontractdetail> ContractlineitemCustomerAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_Emails")]
        public IList<MicrosoftDynamicsCRMemail> AccountEmails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentaccountid")]
        public MicrosoftDynamicsCRMaccount Parentaccountid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_parent_account")]
        public IList<MicrosoftDynamicsCRMaccount> AccountParentAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Socialprofile_customer_accounts")]
        public IList<MicrosoftDynamicsCRMsocialprofile> SocialprofileCustomerAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_DuplicateMatchingRecord")]
        public IList<MicrosoftDynamicsCRMduplicaterecord> AccountDuplicateMatchingRecord { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_activity_parties")]
        public IList<MicrosoftDynamicsCRMactivityparty> AccountActivityParties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_connections1")]
        public IList<MicrosoftDynamicsCRMconnection> AccountConnections1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owningteam")]
        public MicrosoftDynamicsCRMteam Owningteam { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "defaultpricelevelid")]
        public MicrosoftDynamicsCRMpricelevel Defaultpricelevelid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lead_parent_account")]
        public IList<MicrosoftDynamicsCRMlead> LeadParentAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contract_customer_accounts")]
        public IList<MicrosoftDynamicsCRMcontract> ContractCustomerAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_actioncard")]
        public IList<MicrosoftDynamicsCRMactioncard> AccountActioncard { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owninguser")]
        public MicrosoftDynamicsCRMsystemuser Owninguser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_Letters")]
        public IList<MicrosoftDynamicsCRMletter> AccountLetters { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stageid_processstage")]
        public MicrosoftDynamicsCRMprocessstage StageidProcessstage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "order_customer_accounts")]
        public IList<MicrosoftDynamicsCRMsalesorder> OrderCustomerAccounts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_abs_scheduledprocessexecutions")]
        public IList<MicrosoftDynamicsCRMabsScheduledprocessexecution> AccountAbsScheduledprocessexecutions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_knowledgebaserecord")]
        public IList<MicrosoftDynamicsCRMknowledgebaserecord> AccountKnowledgebaserecord { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msdyn_account_knowledgearticle")]
        public IList<MicrosoftDynamicsCRMknowledgearticle> MsdynAccountKnowledgearticle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account_QueueItems")]
        public IList<MicrosoftDynamicsCRMqueueitem> AccountQueueItems { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_account_bcgov_businesscontact_BusinessProfile")]
        public IList<MicrosoftDynamicsCRMbcgovBusinesscontact> BcgovAccountBcgovBusinesscontactBusinessProfile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_account_bcgov_certificate_CertificateHolderBusiness")]
        public IList<MicrosoftDynamicsCRMbcgovCertificate> BcgovAccountBcgovCertificateCertificateHolderBusiness { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_account_contact_BusinessLegalName")]
        public IList<MicrosoftDynamicsCRMcontact> BcgovAccountContactBusinessLegalName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_account_customaddress")]
        public IList<MicrosoftDynamicsCRMbcgovCustomaddress> BcgovAccountCustomaddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_account_customaddress_BusinessProfile")]
        public IList<MicrosoftDynamicsCRMbcgovCustomaddress> BcgovAccountCustomaddressBusinessProfile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_account_equipment_CurrentBusinessOwner")]
        public IList<MicrosoftDynamicsCRMbcgovEquipment> BcgovAccountEquipmentCurrentBusinessOwner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_account_location_BusinessProfile")]
        public IList<MicrosoftDynamicsCRMbcgovLocation> BcgovAccountLocationBusinessProfile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_CurrentBusinessMailingAddress")]
        public MicrosoftDynamicsCRMbcgovCustomaddress BcgovCurrentBusinessMailingAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_CurrentBusinessPhysicalAddress")]
        public MicrosoftDynamicsCRMbcgovCustomaddress BcgovCurrentBusinessPhysicalAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_AdditionalContact")]
        public MicrosoftDynamicsCRMcontact BcgovAdditionalContact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_account_inspection_BusinessLegalName")]
        public IList<MicrosoftDynamicsCRMbcgovInspection> BcgovAccountInspectionBusinessLegalName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_CurrentWaiverCertificate")]
        public MicrosoftDynamicsCRMbcgovCertificate BcgovCurrentWaiverCertificate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_CurrentRegisteredSellerCertificate")]
        public MicrosoftDynamicsCRMbcgovCertificate BcgovCurrentRegisteredSellerCertificate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_account_inspection_OwnerCategory")]
        public IList<MicrosoftDynamicsCRMbcgovInspection> BcgovAccountInspectionOwnerCategory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcgov_account_bcgov_complaint_BusinessLegalName")]
        public IList<MicrosoftDynamicsCRMbcgovComplaint> BcgovAccountBcgovComplaintBusinessLegalName { get; set; }

    }
}
