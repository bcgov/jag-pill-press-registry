// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Jag.PillPressRegistry.Interfaces.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Microsoft.Dynamics.CRM.discount
    /// </summary>
    public partial class MicrosoftDynamicsCRMdiscount
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMdiscount
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMdiscount()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMdiscount
        /// class.
        /// </summary>
        /// <param name="amount">Amount of the discount, specified either as a
        /// percentage or as a monetary amount.</param>
        /// <param name="importsequencenumber">Unique identifier of the data
        /// import or data migration that created this record.</param>
        /// <param name="_modifiedbyValue">Unique identifier of the user who
        /// last modified the discount.</param>
        /// <param name="isamounttype">Specifies whether the discount is
        /// specified as a monetary amount or a percentage.</param>
        /// <param name="_modifiedonbehalfbyValue">Unique identifier of the
        /// delegate user who last modified the discount.</param>
        /// <param name="organizationid">Unique identifier of the organization
        /// associated with the discount.</param>
        /// <param name="amountBase">Shows the Amount field converted to the
        /// system's default base currency, if specified as a fixed amount. The
        /// calculation uses the exchange rate specified in the Currencies
        /// area.</param>
        /// <param name="highquantity">Upper boundary for the quantity range to
        /// which a particular discount can be applied.</param>
        /// <param name="createdon">Date and time when the discount was
        /// created.</param>
        /// <param name="exchangerate">Shows the conversion rate of the
        /// record's currency. The exchange rate is used to convert all money
        /// fields in the record from the local currency to the system's
        /// default currency.</param>
        /// <param name="discountid">Unique identifier of the discount.</param>
        /// <param name="_createdonbehalfbyValue">Unique identifier of the
        /// delegate user who created the discount.</param>
        /// <param name="modifiedon">Date and time when the discount was last
        /// modified.</param>
        /// <param name="percentage">Percentage discount value.</param>
        /// <param name="lowquantity">Lower boundary for the quantity range to
        /// which a particular discount is applied.</param>
        /// <param name="_discounttypeidValue">Unique identifier of the
        /// discount list associated with the discount.</param>
        /// <param name="_createdbyValue">Unique identifier of the user who
        /// created the discount.</param>
        /// <param name="overriddencreatedon">Date and time that the record was
        /// migrated.</param>
        /// <param name="versionnumber">Version number of the discount.</param>
        /// <param name="_transactioncurrencyidValue">Choose the local currency
        /// for the record to make sure budgets are reported in the correct
        /// currency.</param>
        public MicrosoftDynamicsCRMdiscount(decimal? amount = default(decimal?), int? importsequencenumber = default(int?), string _modifiedbyValue = default(string), bool? isamounttype = default(bool?), string _modifiedonbehalfbyValue = default(string), string organizationid = default(string), decimal? amountBase = default(decimal?), decimal? highquantity = default(decimal?), System.DateTimeOffset? createdon = default(System.DateTimeOffset?), decimal? exchangerate = default(decimal?), string discountid = default(string), string _createdonbehalfbyValue = default(string), System.DateTimeOffset? modifiedon = default(System.DateTimeOffset?), decimal? percentage = default(decimal?), decimal? lowquantity = default(decimal?), string _discounttypeidValue = default(string), string _createdbyValue = default(string), System.DateTimeOffset? overriddencreatedon = default(System.DateTimeOffset?), string versionnumber = default(string), string _transactioncurrencyidValue = default(string), IList<MicrosoftDynamicsCRMasyncoperation> discountAsyncOperations = default(IList<MicrosoftDynamicsCRMasyncoperation>), MicrosoftDynamicsCRMsystemuser createdonbehalfby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMtransactioncurrency transactioncurrencyid = default(MicrosoftDynamicsCRMtransactioncurrency), IList<MicrosoftDynamicsCRMsyncerror> discountSyncErrors = default(IList<MicrosoftDynamicsCRMsyncerror>), MicrosoftDynamicsCRMsystemuser createdby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMdiscounttype discounttypeid = default(MicrosoftDynamicsCRMdiscounttype), IList<MicrosoftDynamicsCRMbulkdeletefailure> discountBulkDeleteFailures = default(IList<MicrosoftDynamicsCRMbulkdeletefailure>), MicrosoftDynamicsCRMsystemuser modifiedonbehalfby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser modifiedby = default(MicrosoftDynamicsCRMsystemuser))
        {
            Amount = amount;
            Importsequencenumber = importsequencenumber;
            this._modifiedbyValue = _modifiedbyValue;
            Isamounttype = isamounttype;
            this._modifiedonbehalfbyValue = _modifiedonbehalfbyValue;
            Organizationid = organizationid;
            AmountBase = amountBase;
            Highquantity = highquantity;
            Createdon = createdon;
            Exchangerate = exchangerate;
            Discountid = discountid;
            this._createdonbehalfbyValue = _createdonbehalfbyValue;
            Modifiedon = modifiedon;
            Percentage = percentage;
            Lowquantity = lowquantity;
            this._discounttypeidValue = _discounttypeidValue;
            this._createdbyValue = _createdbyValue;
            Overriddencreatedon = overriddencreatedon;
            Versionnumber = versionnumber;
            this._transactioncurrencyidValue = _transactioncurrencyidValue;
            DiscountAsyncOperations = discountAsyncOperations;
            Createdonbehalfby = createdonbehalfby;
            Transactioncurrencyid = transactioncurrencyid;
            DiscountSyncErrors = discountSyncErrors;
            Createdby = createdby;
            Discounttypeid = discounttypeid;
            DiscountBulkDeleteFailures = discountBulkDeleteFailures;
            Modifiedonbehalfby = modifiedonbehalfby;
            Modifiedby = modifiedby;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets amount of the discount, specified either as a
        /// percentage or as a monetary amount.
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public decimal? Amount { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the data import or data migration
        /// that created this record.
        /// </summary>
        [JsonProperty(PropertyName = "importsequencenumber")]
        public int? Importsequencenumber { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the user who last modified the
        /// discount.
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedby_value")]
        public string _modifiedbyValue { get; set; }

        /// <summary>
        /// Gets or sets specifies whether the discount is specified as a
        /// monetary amount or a percentage.
        /// </summary>
        [JsonProperty(PropertyName = "isamounttype")]
        public bool? Isamounttype { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the delegate user who last
        /// modified the discount.
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedonbehalfby_value")]
        public string _modifiedonbehalfbyValue { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the organization associated with
        /// the discount.
        /// </summary>
        [JsonProperty(PropertyName = "organizationid")]
        public string Organizationid { get; set; }

        /// <summary>
        /// Gets or sets shows the Amount field converted to the system's
        /// default base currency, if specified as a fixed amount. The
        /// calculation uses the exchange rate specified in the Currencies
        /// area.
        /// </summary>
        [JsonProperty(PropertyName = "amount_base")]
        public decimal? AmountBase { get; set; }

        /// <summary>
        /// Gets or sets upper boundary for the quantity range to which a
        /// particular discount can be applied.
        /// </summary>
        [JsonProperty(PropertyName = "highquantity")]
        public decimal? Highquantity { get; set; }

        /// <summary>
        /// Gets or sets date and time when the discount was created.
        /// </summary>
        [JsonProperty(PropertyName = "createdon")]
        public System.DateTimeOffset? Createdon { get; set; }

        /// <summary>
        /// Gets or sets shows the conversion rate of the record's currency.
        /// The exchange rate is used to convert all money fields in the record
        /// from the local currency to the system's default currency.
        /// </summary>
        [JsonProperty(PropertyName = "exchangerate")]
        public decimal? Exchangerate { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the discount.
        /// </summary>
        [JsonProperty(PropertyName = "discountid")]
        public string Discountid { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the delegate user who created the
        /// discount.
        /// </summary>
        [JsonProperty(PropertyName = "_createdonbehalfby_value")]
        public string _createdonbehalfbyValue { get; set; }

        /// <summary>
        /// Gets or sets date and time when the discount was last modified.
        /// </summary>
        [JsonProperty(PropertyName = "modifiedon")]
        public System.DateTimeOffset? Modifiedon { get; set; }

        /// <summary>
        /// Gets or sets percentage discount value.
        /// </summary>
        [JsonProperty(PropertyName = "percentage")]
        public decimal? Percentage { get; set; }

        /// <summary>
        /// Gets or sets lower boundary for the quantity range to which a
        /// particular discount is applied.
        /// </summary>
        [JsonProperty(PropertyName = "lowquantity")]
        public decimal? Lowquantity { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the discount list associated with
        /// the discount.
        /// </summary>
        [JsonProperty(PropertyName = "_discounttypeid_value")]
        public string _discounttypeidValue { get; set; }

        /// <summary>
        /// Gets or sets unique identifier of the user who created the
        /// discount.
        /// </summary>
        [JsonProperty(PropertyName = "_createdby_value")]
        public string _createdbyValue { get; set; }

        /// <summary>
        /// Gets or sets date and time that the record was migrated.
        /// </summary>
        [JsonProperty(PropertyName = "overriddencreatedon")]
        public System.DateTimeOffset? Overriddencreatedon { get; set; }

        /// <summary>
        /// Gets or sets version number of the discount.
        /// </summary>
        [JsonProperty(PropertyName = "versionnumber")]
        public string Versionnumber { get; set; }

        /// <summary>
        /// Gets or sets choose the local currency for the record to make sure
        /// budgets are reported in the correct currency.
        /// </summary>
        [JsonProperty(PropertyName = "_transactioncurrencyid_value")]
        public string _transactioncurrencyidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Discount_AsyncOperations")]
        public IList<MicrosoftDynamicsCRMasyncoperation> DiscountAsyncOperations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Createdonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactioncurrencyid")]
        public MicrosoftDynamicsCRMtransactioncurrency Transactioncurrencyid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Discount_SyncErrors")]
        public IList<MicrosoftDynamicsCRMsyncerror> DiscountSyncErrors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdby")]
        public MicrosoftDynamicsCRMsystemuser Createdby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discounttypeid")]
        public MicrosoftDynamicsCRMdiscounttype Discounttypeid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Discount_BulkDeleteFailures")]
        public IList<MicrosoftDynamicsCRMbulkdeletefailure> DiscountBulkDeleteFailures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedby { get; set; }

    }
}
